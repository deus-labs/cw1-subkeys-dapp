{"version":3,"sources":["config.ts","utils/currency.ts","utils/toast.ts","routes/index.ts","services/keplr.ts","services/wallet.tsx","contracts/cw1-subkeys/contract.ts","contracts/index.tsx","contracts/cw1-subkeys/useContract.ts","components/Navbar.tsx","components/Sidebar.tsx","layout/Page.tsx","pages/Welcome.tsx","components/WalletAddress.tsx","layout/Section.tsx","components/TextInput.tsx","components/PrettyPrint.tsx","components/Checkbox.tsx","components/Button.tsx","components/TransactionHash.tsx","pages/Instantiate.tsx","pages/Execute/SendTokens.tsx","components/Dropdown.tsx","pages/Execute/IncreaseAllowance.tsx","pages/Execute/DecreaseAllowace.tsx","pages/Execute/UpdateAdmins.tsx","pages/Execute/FreezeAdmins.tsx","pages/Execute/SetPermissions.tsx","components/ContractAddress.tsx","pages/Execute/index.tsx","pages/Query/AllAllowances.tsx","pages/Query/Admins.tsx","pages/Query/Allowances.tsx","pages/Query/AllPermissions.tsx","pages/Query/Permissions.tsx","pages/Query/CanExecute.tsx","pages/Query/index.tsx","App.tsx","index.tsx"],"names":["config","chainId","chainName","addressPrefix","rpcUrl","httpUrl","faucetUrl","feeToken","stakingToken","coinMap","ujunox","denom","fractionalDigits","gasPrice","fees","upload","init","exec","keplrConfig","rpc","rest","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","bip44","coinType","convertToNativeCoin","amount","isNaN","Number","coin","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","autoClose","style","width","errorToast","message","Toast","error","instantiatePath","executePath","queryPath","createClient","signer","a","SigningCosmWasmClient","connectWithSigner","throwNotInitialized","Error","defaultContext","initialized","clear","address","balance","refreshBalance","getClient","getSigner","CosmWasmContext","React","useWallet","WalletProvider","children","useState","setSigner","client","setClient","contextWithInit","value","setValue","length","getBalance","push","useEffect","console","log","getAccounts","localStorage","setItem","bind","Provider","CW1","options","use","contractAddress","allowance","queryContractSmart","spender","allAllowances","startAfter","limit","all_allowances","start_after","permissions","allPermissions","all_permissions","canExecute","sender","msg","can_execute","admins","admin_list","freeze","senderAddress","fee","calculateFee","execute","result","transactionHash","updateAdmins","update_admins","msgs","increaseAllowance","expires","increase_allowance","decreaseAllowance","decrease_allowance","setPermissions","set_permissions","instantiate","codeId","initMsg","label","cw1Subkeys","ContractsContext","createContext","useContracts","useContext","ContractsProvider","wallet","getItem","setAddress","setCW1","contractConfig","GasPrice","fromString","cw1Contract","CW1Init","getCW1Instance","useCallback","Promise","resolve","reject","then","catch","updateContractAddress","useCW1Contract","Navbar","className","htmlFor","size","Sidebar","content","keplr","history","useHistory","initializing","setInitializing","connect","loadKeplrWallet","anyWindow","window","getOfflineSigner","enable","experimentalSuggestChain","getOfflineSignerAuto","signAmino","sign","err","disconnect","useKeplr","location","useLocation","id","type","to","backgroundColor","pathname","href","target","rel","src","alt","onClick","PageLayout","Welcome","WalletAddress","Section","TextInput","placeholder","onChange","onKeyPress","PrettyPrint","data","customStyle","language","okaidia","JSON","stringify","Checkbox","checked","Button","loading","text","data-tip","disabled","color","TransactionHash","txHash","Instantiate","contract","input","setInput","setCodeId","mutable","setMutable","setAdmins","setLoading","setTxHash","e","key","find","admin","parseInt","hash","SendTokens","addressToSend","setAddressToSend","amountToSend","setAmountToSend","bank","send","from_address","to_address","Dropdown","map","option","idx","toLowerCase","split","join","DROPDOWN_OPTIONS","IncreaseAllowance","allowanceAddress","setAllowanceAddress","allowanceAmount","setAllowanceAmount","expiration","setExpiration","expirationValue","setExpirationValue","expirationTime","never","at_height","height","at_time","time","DecreaseAllowance","UpdateAdmins","FreezeAdmins","SetPermissions","delegate","undelegate","redelegate","withdraw","ContractAddress","setContractAddress","Execute","setOption","DecreaseAllowace","AllAllowances","setData","allowances","Admins","AllPermissions","srcValidatorAddress","setSrcValidatorAddress","dstValidatorAddress","setDstValidatorAddress","checkSendMsg","checkDelegateMsg","staking","validator","checkUndelegateMsg","checkRedelegateMsg","src_validator","dst_validator","Query","Allowances","Permissions","CanExecute","App","basename","process","Page","exact","path","component","theme","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d71022b.chunk.js","sourcesContent":["import { CoinMap } from \"./utils\"\n\nexport interface AppConfig {\n  readonly chainId: string\n  readonly chainName: string\n  readonly addressPrefix: string\n  readonly rpcUrl: string\n  readonly httpUrl: string\n  readonly faucetUrl: string\n  readonly feeToken: string\n  readonly stakingToken: string\n  readonly coinMap: CoinMap\n  readonly gasPrice: number\n  readonly fees: FeeOptions\n  readonly codeId?: number\n}\n\nexport interface FeeOptions {\n  upload: number\n  exec: number\n  init: number\n}\n\nexport interface KeplrCoin {\n  readonly coinDenom: string\n  readonly coinMinimalDenom: string\n  readonly coinDecimals: number\n}\n\nexport interface KeplrConfig {\n  readonly chainId: string\n  readonly chainName: string\n  readonly rpc: string\n  readonly rest: string\n  readonly bech32Config: {\n    readonly bech32PrefixAccAddr: string\n    readonly bech32PrefixAccPub: string\n    readonly bech32PrefixValAddr: string\n    readonly bech32PrefixValPub: string\n    readonly bech32PrefixConsAddr: string\n    readonly bech32PrefixConsPub: string\n  }\n  readonly currencies: readonly KeplrCoin[]\n  readonly feeCurrencies: readonly KeplrCoin[]\n  readonly stakeCurrency: KeplrCoin\n  readonly gasPriceStep: {\n    readonly low: number\n    readonly average: number\n    readonly high: number\n  }\n  readonly bip44: { readonly coinType: number }\n  readonly coinType: number\n}\n\nexport const config: AppConfig = {\n  chainId: \"uni\",\n  chainName: \"Uni\",\n  addressPrefix: \"juno\",\n  rpcUrl: \"https://rpc.uni.juno.deuslabs.fi\",\n  httpUrl: \"https://lcd.uni.juno.deuslabs.fi\",\n  faucetUrl: \"https://faucet.uni.juno.deuslabs.fi\",\n  feeToken: \"ujunox\",\n  stakingToken: \"ujunox\",\n  coinMap: {\n    ujunox: { denom: \"JUNOX\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n  fees: {\n    upload: 1500000,\n    init: 500000,\n    exec: 200000,\n  },\n}\n\nexport const keplrConfig: KeplrConfig = {\n  chainId: config.chainId,\n  chainName: config.chainName,\n  rpc: config.rpcUrl,\n  rest: config.httpUrl,\n  bech32Config: {\n    bech32PrefixAccAddr: `${config.addressPrefix}`,\n    bech32PrefixAccPub: `${config.addressPrefix}pub`,\n    bech32PrefixValAddr: `${config.addressPrefix}valoper`,\n    bech32PrefixValPub: `${config.addressPrefix}valoperpub`,\n    bech32PrefixConsAddr: `${config.addressPrefix}valcons`,\n    bech32PrefixConsPub: `${config.addressPrefix}valconspub`,\n  },\n  currencies: [\n    {\n      coinDenom: config.coinMap[config.feeToken].denom,\n      coinMinimalDenom: config.feeToken,\n      coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n    },\n    {\n      coinDenom: config.coinMap[config.stakingToken].denom,\n      coinMinimalDenom: config.stakingToken,\n      coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n    },\n  ],\n  feeCurrencies: [\n    {\n      coinDenom: config.coinMap[config.feeToken].denom,\n      coinMinimalDenom: config.feeToken,\n      coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n    },\n  ],\n  stakeCurrency: {\n    coinDenom: config.coinMap[config.stakingToken].denom,\n    coinMinimalDenom: config.stakingToken,\n    coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n  },\n  gasPriceStep: {\n    low: config.gasPrice / 2,\n    average: config.gasPrice,\n    high: config.gasPrice * 2,\n  },\n  bip44: { coinType: 118 },\n  coinType: 118,\n}\n","import { coin } from \"@cosmjs/proto-signing\"\nimport { config } from \"src/config\"\n\nexport interface MappedCoin {\n  readonly denom: string\n  readonly fractionalDigits: number\n}\n\nexport interface CoinMap {\n  readonly [key: string]: MappedCoin\n}\n\nexport function convertToNativeCoin(amount: string) {\n  if (amount === \"\" || isNaN(Number(amount))) return null\n\n  return coin(Number(amount) * 1000000, config.feeToken)\n}\n","import { toast as Toast, ToastOptions } from \"react-toastify\"\n\nconst config: ToastOptions = {\n  hideProgressBar: true,\n  closeOnClick: false,\n  pauseOnHover: false,\n  draggable: false,\n  progress: undefined,\n  position: \"top-left\",\n  autoClose: false,\n  style: { width: \"fit-content\" },\n}\n\nexport function infoToast(message: string) {\n  Toast.info(message, {\n    ...config,\n  })\n}\n\nexport function warnToast(message: string) {\n  Toast.warn(message, {\n    ...config,\n  })\n}\n\nexport function successToast(message: string) {\n  Toast.success(message, {\n    ...config,\n  })\n}\n\nexport function errorToast(message: string) {\n  Toast.error(message, {\n    ...config,\n  })\n}\n\nexport function promiseToast(\n  callback: any,\n  pendingMessage: string,\n  successMessage: string,\n  errorMessage: string\n) {\n  Toast.promise(\n    callback,\n    {\n      pending: pendingMessage,\n      success: successMessage,\n      error: errorMessage,\n    },\n    { ...config }\n  )\n}\n","export const instantiatePath = \"instantiate\"\nexport const executePath = \"execute\"\nexport const queryPath = \"query\"\nexport const contractPath = \"contract\"\n","import { useCallback, useEffect, useState } from \"react\"\nimport { OfflineSigner } from \"@cosmjs/proto-signing\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { config, keplrConfig } from \"src/config\"\nimport { useWallet } from \"./wallet\"\nimport { errorToast } from \"src/utils\"\nimport { instantiatePath } from \"src/routes\"\nimport { useHistory } from \"react-router\"\n\nexport async function createClient(\n  signer: OfflineSigner\n): Promise<SigningCosmWasmClient> {\n  return SigningCosmWasmClient.connectWithSigner(config.rpcUrl, signer)\n}\n\nexport function useKeplr() {\n  const { clear, init, initialized } = useWallet()\n  const history = useHistory()\n  const [initializing, setInitializing] = useState(false)\n\n  const disconnect = () => {\n    localStorage.clear()\n    clear()\n  }\n\n  const connect = useCallback(() => {\n    const loadKeplrWallet = async (): Promise<OfflineSigner> => {\n      const anyWindow: any = window\n      if (!anyWindow.getOfflineSigner) {\n        setInitializing(false)\n        throw new Error(\"Keplr extension is not available\")\n      }\n\n      await anyWindow.keplr.enable(config.chainId)\n      await anyWindow.keplr.experimentalSuggestChain(keplrConfig)\n\n      const signer = anyWindow.getOfflineSignerAuto(config.chainId)\n      signer.signAmino = signer.signAmino ?? signer.sign\n\n      return Promise.resolve(signer)\n    }\n\n    setInitializing(true)\n\n    loadKeplrWallet()\n      .then((signer) => {\n        init(signer)\n      })\n      .catch((err) => {\n        setInitializing(false)\n        errorToast(err.message)\n      })\n  }, [init])\n\n  useEffect(() => {\n    const item = localStorage.getItem(\"wallet_address\")\n\n    if (item) connect()\n  }, [initialized, connect])\n\n  useEffect(() => {\n    if (!initialized) return\n\n    history.push(instantiatePath)\n\n    setInitializing(false)\n  }, [initialized, history])\n\n  return {\n    connect,\n    disconnect,\n    initializing,\n  }\n}\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { config } from \"../config\"\nimport { createClient } from \"./keplr\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { Coin } from \"@cosmjs/stargate\"\nimport { OfflineSigner } from \"@cosmjs/proto-signing\"\n\ninterface CosmWasmContextType {\n  readonly initialized: boolean\n  readonly init: (signer: OfflineSigner) => void\n  readonly clear: () => void\n  readonly address: string\n  readonly balance: readonly Coin[]\n  readonly refreshBalance: () => Promise<void>\n  readonly getClient: () => SigningCosmWasmClient\n  readonly getSigner: () => OfflineSigner\n}\n\nfunction throwNotInitialized(): any {\n  throw new Error(\"Not yet initialized\")\n}\n\nconst defaultContext: CosmWasmContextType = {\n  initialized: false,\n  init: throwNotInitialized,\n  clear: throwNotInitialized,\n  address: \"\",\n  balance: [],\n  refreshBalance: throwNotInitialized,\n  getClient: throwNotInitialized,\n  getSigner: throwNotInitialized,\n}\n\nexport const CosmWasmContext =\n  React.createContext<CosmWasmContextType>(defaultContext)\n\nexport const useWallet = (): CosmWasmContextType =>\n  React.useContext(CosmWasmContext)\n\nexport function WalletProvider({ children }: any): JSX.Element {\n  const [signer, setSigner] = useState<OfflineSigner>()\n  const [client, setClient] = useState<SigningCosmWasmClient>()\n\n  const contextWithInit = { ...defaultContext, init: setSigner }\n  const [value, setValue] = useState<CosmWasmContextType>(contextWithInit)\n\n  const clear = (): void => {\n    setValue({ ...contextWithInit })\n    setClient(undefined)\n    setSigner(undefined)\n  }\n\n  // Get balance for each coin specified in config.coinMap\n  async function refreshBalance(\n    address: string,\n    balance: Coin[]\n  ): Promise<void> {\n    if (!client) return\n\n    balance.length = 0\n    for (const denom in config.coinMap) {\n      const coin = await client.getBalance(address, denom)\n      if (coin) balance.push(coin)\n    }\n\n    setValue({ ...value, balance })\n  }\n\n  useEffect(() => {\n    if (!signer) return\n    ;(async function updateClient(): Promise<void> {\n      try {\n        const client = await createClient(signer)\n        setClient(client)\n      } catch (error) {\n        console.log(error)\n      }\n    })()\n  }, [signer])\n\n  useEffect(() => {\n    if (!signer || !client) return\n\n    const balance: Coin[] = []\n\n    ;(async function updateValue(): Promise<void> {\n      const address = (await signer.getAccounts())[0].address\n\n      await refreshBalance(address, balance)\n\n      localStorage.setItem(\"wallet_address\", address)\n\n      setValue({\n        initialized: true,\n        init: () => {},\n        clear,\n        address,\n        balance,\n        refreshBalance: refreshBalance.bind(null, address, balance),\n        getClient: () => client,\n        getSigner: () => signer,\n      })\n    })()\n  }, [client])\n\n  return (\n    <CosmWasmContext.Provider value={value}>\n      {children}\n    </CosmWasmContext.Provider>\n  )\n}\n","import { Coin } from \"@cosmjs/proto-signing\"\nimport { calculateFee } from \"@cosmjs/stargate\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { FeeOptions } from \"src/config\"\nimport { GasPrice } from \"@cosmjs/stargate\"\n\ninterface ExecuteFeeOptions {\n  fees: FeeOptions\n  gasPrice: GasPrice\n}\n\ntype Expiration =\n  | { at_height: { height: number } }\n  | { at_time: { time: number } }\n  | { never: {} }\n\nexport interface CanExecuteResponse {\n  readonly can_execute: boolean\n}\n\nexport interface Permissions {\n  readonly delegate: boolean\n  readonly undelegate: boolean\n  readonly redelegate: boolean\n  readonly withdraw: boolean\n}\n\nexport interface PermissionsInfo {\n  readonly spender: string\n  readonly permissions: Permissions\n}\n\ninterface AllPermissionsResponse {\n  readonly permissions: readonly PermissionsInfo[]\n}\n\nexport interface AllowanceInfo {\n  readonly balance: readonly Coin[]\n  readonly expires: Expiration\n  readonly spender?: string\n}\n\nexport interface AllAllowancesResponse {\n  readonly allowances: readonly AllowanceInfo[]\n}\n\ninterface AdminListResponse {\n  readonly admins: readonly string[]\n  readonly mutable: boolean\n}\n\ntype CosmosMsg =\n  | SendMsg\n  | DelegateMsg\n  | UndelegateMsg\n  | RedelegateMsg\n  | WithdrawMsg\n\nexport interface SendMsg {\n  readonly bank: {\n    readonly send: {\n      readonly from_address: string\n      readonly to_address: string\n      readonly amount: readonly Coin[]\n    }\n  }\n}\n\nexport interface DelegateMsg {\n  readonly staking: {\n    readonly delegate: {\n      readonly validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface UndelegateMsg {\n  readonly staking: {\n    readonly undelegate: {\n      readonly validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface RedelegateMsg {\n  readonly staking: {\n    readonly redelegate: {\n      readonly src_validator: string\n      readonly dst_validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface WithdrawMsg {\n  readonly staking: {\n    readonly withdraw: {\n      readonly validator: string\n      readonly recipient?: string\n    }\n  }\n}\n\nexport interface CW1Instance {\n  readonly contractAddress: string\n\n  // queries\n  admins: () => Promise<AdminListResponse>\n\n  allowance: (address?: string) => Promise<AllowanceInfo>\n\n  allAllowances: (\n    startAfter?: string,\n    limit?: number\n  ) => Promise<AllAllowancesResponse>\n\n  permissions: (address?: string) => Promise<PermissionsInfo>\n\n  allPermissions: (\n    startAfter?: string,\n    limit?: number\n  ) => Promise<AllPermissionsResponse>\n  canExecute: (sender: string, msg: CosmosMsg) => Promise<CanExecuteResponse>\n\n  // actions\n  execute: (\n    senderAddress: string,\n    msgs: readonly CosmosMsg[]\n  ) => Promise<string>\n\n  freeze: (senderAddress: string) => Promise<string>\n\n  updateAdmins: (\n    senderAddress: string,\n    admins: readonly string[]\n  ) => Promise<string>\n\n  increaseAllowance: (\n    senderAddress: string,\n    recipient: string,\n    amount: Coin,\n    expires?: Expiration\n  ) => Promise<string>\n\n  decreaseAllowance: (\n    senderAddress: string,\n    recipient: string,\n    amount: Coin,\n    expires?: Expiration\n  ) => Promise<string>\n\n  setPermissions: (\n    senderAddress: string,\n    recipient: string,\n    permissions: Permissions\n  ) => Promise<string>\n}\n\nexport interface CW1Contract {\n  instantiate: (\n    senderAddress: string,\n    codeId: number,\n    initMsg: Record<string, unknown>,\n    label: string\n    // admin?: string\n  ) => Promise<string>\n\n  use: (contractAddress: string) => CW1Instance\n}\n\nexport const CW1 = (\n  client: SigningCosmWasmClient,\n  options: ExecuteFeeOptions\n): CW1Contract => {\n  const use = (contractAddress: string): CW1Instance => {\n    const allowance = async (address?: string): Promise<AllowanceInfo> => {\n      return await client.queryContractSmart(contractAddress, {\n        allowance: { spender: address },\n      })\n    }\n\n    const allAllowances = async (\n      startAfter?: string,\n      limit?: number\n    ): Promise<AllAllowancesResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        all_allowances: { start_after: startAfter, limit: limit },\n      })\n    }\n\n    const permissions = async (address?: string): Promise<PermissionsInfo> => {\n      return await client.queryContractSmart(contractAddress, {\n        permissions: { spender: address },\n      })\n    }\n\n    const allPermissions = async (\n      startAfter?: string,\n      limit?: number\n    ): Promise<AllPermissionsResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        all_permissions: { start_after: startAfter, limit: limit },\n      })\n    }\n\n    const canExecute = async (\n      sender: string,\n      msg: CosmosMsg\n    ): Promise<CanExecuteResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        can_execute: { sender: sender, msg: msg },\n      })\n    }\n\n    const admins = async (): Promise<AdminListResponse> => {\n      return client.queryContractSmart(contractAddress, { admin_list: {} })\n    }\n\n    const freeze = async (senderAddress: string): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { freeze: {} },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const updateAdmins = async (\n      senderAddress: string,\n      admins: readonly string[]\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { update_admins: { admins } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const execute = async (\n      senderAddress: string,\n      msgs: readonly CosmosMsg[]\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { execute: { msgs } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const increaseAllowance = async (\n      senderAddress: string,\n      spender: string,\n      amount: Coin,\n      expires?: Expiration\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { increase_allowance: { spender, amount, expires } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const decreaseAllowance = async (\n      senderAddress: string,\n      spender: string,\n      amount: Coin,\n      expires?: Expiration\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { decrease_allowance: { spender, amount, expires } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const setPermissions = async (\n      senderAddress: string,\n      spender: string,\n      permissions: Permissions\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { set_permissions: { spender, permissions } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    return {\n      contractAddress,\n      admins,\n      allowance,\n      allAllowances,\n      permissions,\n      allPermissions,\n      canExecute,\n      execute,\n      freeze,\n      updateAdmins,\n      increaseAllowance,\n      decreaseAllowance,\n      setPermissions,\n    }\n  }\n\n  const instantiate = async (\n    senderAddress: string,\n    codeId: number,\n    initMsg: Record<string, unknown>,\n    label: string\n    // admin?: string\n  ): Promise<string> => {\n    const fee = calculateFee(options.fees.init, options.gasPrice)\n\n    const result = await client.instantiate(\n      senderAddress,\n      codeId,\n      initMsg,\n      label,\n      fee\n    )\n    return result.transactionHash\n  }\n\n  return { use, instantiate }\n}\n","import React from \"react\"\nimport { UseCW1ContractProps, useCW1Contract } from \"./cw1-subkeys\"\n\ninterface ContractsContextType {\n  cw1Subkeys: UseCW1ContractProps | null\n}\n\nconst defaultContext: ContractsContextType = {\n  cw1Subkeys: null,\n}\n\nconst ContractsContext =\n  React.createContext<ContractsContextType>(defaultContext)\n\nexport const useContracts = (): ContractsContextType =>\n  React.useContext(ContractsContext)\n\nexport function ContractsProvider({\n  children,\n}: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const cw1Subkeys = useCW1Contract()\n\n  const value: ContractsContextType = { cw1Subkeys }\n\n  return (\n    <ContractsContext.Provider value={value}>\n      {children}\n    </ContractsContext.Provider>\n  )\n}\n","import { GasPrice } from \"@cosmjs/stargate\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { config } from \"src/config\"\nimport { useWallet } from \"src/services/wallet\"\nimport { CW1Contract, CW1Instance, CW1 as CW1Init } from \"./contract\"\ninterface InstantiateProps {\n  codeId: number\n  initMsg: Record<string, unknown>\n  label: string\n}\n\nexport interface UseCW1ContractProps {\n  instantiate: ({ codeId, initMsg, label }: InstantiateProps) => Promise<string>\n  use: () => CW1Instance | undefined\n  updateContractAddress: (contractAddress: string) => void\n}\n\nexport function useCW1Contract(): UseCW1ContractProps {\n  const wallet = useWallet()\n\n  const [address, setAddress] = useState<string>(\n    localStorage.getItem(\"contract_address\") || \"\"\n  )\n  const [CW1, setCW1] = useState<CW1Contract>()\n\n  useEffect(() => {\n    if (wallet.initialized) {\n      const getCW1Instance = async (): Promise<void> => {\n        const contractConfig = {\n          fees: config.fees,\n          gasPrice: GasPrice.fromString(`${config.gasPrice}${config.feeToken}`),\n        }\n\n        const cw1Contract = CW1Init(wallet.getClient(), contractConfig)\n        setCW1(cw1Contract)\n      }\n\n      getCW1Instance()\n    }\n  }, [wallet])\n\n  const updateContractAddress = (contractAddress: string) => {\n    setAddress(contractAddress)\n  }\n\n  const instantiate = useCallback(\n    ({ codeId, initMsg, label }: InstantiateProps): Promise<string> => {\n      return new Promise((resolve, reject) => {\n        if (!CW1) return reject(\"Contract is not initialized.\")\n        CW1.instantiate(wallet.address, codeId, initMsg, label)\n          .then(resolve)\n          .catch(reject)\n      })\n    },\n    [CW1, wallet]\n  )\n\n  const use = useCallback((): CW1Instance | undefined => {\n    return CW1?.use(address)\n  }, [CW1, address])\n\n  return {\n    instantiate,\n    use,\n    updateContractAddress,\n  }\n}\n","import { FaHamburger } from \"react-icons/fa\"\n\nconst Navbar = (): JSX.Element => {\n  return (\n    <div className=\"p-4 items-center bg-deus-dark text-neutral-content flex justify-end lg:hidden\">\n      <label htmlFor=\"sidebar\">\n        <FaHamburger size={24} className=\"cursor-pointer text-deus-red\" />\n      </label>\n    </div>\n  )\n}\n\nexport default Navbar\n","import { useCallback } from \"react\"\nimport {\n  instantiatePath,\n  executePath,\n  queryPath,\n  // contractPath,\n} from \"src/routes\"\nimport { useKeplr } from \"src/services/keplr\"\nimport { useWallet } from \"src/services/wallet\"\nimport { Link } from \"react-router-dom\"\nimport Navbar from \"./Navbar\"\nimport { FaPlay, FaMicrochip, FaSearch /* FaBook */ } from \"react-icons/fa\"\nimport { useLocation } from \"react-router-dom\"\n\ninterface SidebarProps {\n  content: JSX.Element\n}\n\nconst Sidebar = ({ content }: SidebarProps): JSX.Element => {\n  const { initialized } = useWallet()\n  const keplr = useKeplr()\n  const location = useLocation()\n\n  const disconnect = () => {\n    keplr.disconnect()\n  }\n\n  const connect = useCallback(() => {\n    keplr.connect()\n  }, [keplr])\n\n  const buttonOnClick = () => {\n    if (initialized) disconnect()\n    else connect()\n  }\n\n  return (\n    <div className=\"shadow bg-deus-dark drawer drawer-mobile h-full w-screen\">\n      <input id=\"sidebar\" type=\"checkbox\" className=\"drawer-toggle\" />\n      <div className=\"flex flex-col drawer-content\">\n        <Navbar />\n        {content}\n      </div>\n      <div className=\"drawer-side\">\n        <label htmlFor=\"sidebar\" className=\"drawer-overlay\"></label>\n        <ul className=\"menu p-4 overflow-y-auto w-80 bg-deus-gray text-deus-text\">\n          {/* <li>\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${contractPath}`}\n            >\n              <FaBook className=\"mr-4\" />\n              {contractPath}\n            </Link>\n          </li> */}\n          <li className=\"mb-2\">\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${instantiatePath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${instantiatePath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaMicrochip className=\"mr-4\" />\n              {instantiatePath}\n            </Link>\n          </li>\n          <li className=\"mb-2\">\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${executePath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${executePath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaPlay className=\"mr-4\" />\n              {executePath}\n            </Link>\n          </li>\n          <li>\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${queryPath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${queryPath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaSearch className=\"mr-4\" />\n              {queryPath}\n            </Link>\n          </li>\n          <li className=\"h-full justify-end pb-4\">\n            <a\n              href=\"https://deuslabs.fi\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex justify-center\"\n              style={{ backgroundColor: \"transparent\" }}\n            >\n              <div className=\"text-l font-bold\">Made by </div>\n              <img src=\"./deus-logo.png\" alt=\"deus labs\" className=\"h-10\" />\n            </a>\n            <a\n              href=\"https://cosmwasm.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex justify-center mb-2\"\n              style={{ backgroundColor: \"transparent\" }}\n            >\n              <div className=\"text-l font-bold mr-2\">Powered by </div>\n              <img src=\"./cosmwasm-logo.svg\" alt=\"cosmwasm\" className=\"h-8\" />\n            </a>\n            <div className=\"mb-3 flex items-center justify-center text-l font-bold\">\n              Made with{\" \"}\n              <img\n                src=\"./nyan-love.png\"\n                alt=\"love\"\n                className=\"h-10 ml-1 animate-bounce\"\n              />\n            </div>\n            <button\n              onClick={buttonOnClick}\n              className={`btn bg-gradient-to-r from-deus-pink to-deus-purple\n                hover:opacity-80 mx-5 capitalize text-xl ${\n                  keplr.initializing ? \"loading\" : \"\"\n                }`}\n            >\n              {keplr.initializing\n                ? \"\"\n                : `${initialized ? \"Disconnect\" : \"Connect\"} Wallet`}\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import Sidebar from \"src/components/Sidebar\"\n\nconst PageLayout = ({ children }: any): JSX.Element => {\n  return (\n    <div className=\"flex flex-col max-h-screen h-screen bg-deus-dark\">\n      <div className=\"flex-grow\">\n        <Sidebar content={children} />\n      </div>\n    </div>\n  )\n}\n\nexport default PageLayout\n","import { FaArrowLeft } from \"react-icons/fa\"\n\nconst Welcome = (): JSX.Element => {\n  return (\n    <div className=\"p-6 pr-60 bg-deus-black h-full flex flex-col justify-between text-deus-text\">\n      <div className=\"\">\n        <div className=\"text-5xl font-bold mb-5\">CW1 Subkeys</div>\n        <div className=\"text-3xl\">What is it?</div>\n        <br />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Mauris\n          augue neque gravida in fermentum et sollicitudin. Lectus vestibulum\n          mattis ullamcorper velit. Vitae suscipit tellus mauris a diam maecenas\n          sed enim. Duis convallis convallis tellus id interdum velit laoreet\n          id. Lectus magna fringilla urna porttitor rhoncus dolor. Aenean\n          pharetra magna ac placerat. Nulla facilisi nullam vehicula ipsum a\n          arcu. Dui accumsan sit amet nulla facilisi morbi. Faucibus turpis in\n          eu mi bibendum neque. Egestas dui id ornare arcu odio ut. Morbi leo\n          urna molestie at elementum eu. Lectus magna fringilla urna porttitor\n          rhoncus dolor purus non enim. Bibendum enim facilisis gravida neque\n          convallis a cras semper auctor. Dignissim sodales ut eu sem integer\n          vitae justo.\n        </p>\n        <br />\n        <p>\n          Eget gravida cum sociis natoque penatibus et magnis dis. Dapibus\n          ultrices in iaculis nunc sed augue lacus. Aliquet porttitor lacus\n          luctus accumsan. Sed odio morbi quis commodo odio aenean sed\n          adipiscing. Elementum sagittis vitae et leo duis ut diam. Lacus vel\n          facilisis volutpat est velit egestas dui id. Tristique nulla aliquet\n          enim tortor at. Magna fermentum iaculis eu non diam phasellus\n          vestibulum lorem sed. Est pellentesque elit ullamcorper dignissim cras\n          tincidunt lobortis. Dignissim cras tincidunt lobortis feugiat vivamus\n          at augue eget. Neque aliquam vestibulum morbi blandit cursus risus.\n          Bibendum arcu vitae elementum curabitur vitae nunc. Et pharetra\n          pharetra massa massa. Aliquam ultrices sagittis orci a scelerisque\n          purus semper eget. Placerat orci nulla pellentesque dignissim enim sit\n          amet venenatis. Ipsum consequat nisl vel pretium lectus. Volutpat ac\n          tincidunt vitae semper quis lectus nulla. Ornare aenean euismod\n          elementum nisi quis eleifend quam adipiscing vitae.\n        </p>\n      </div>\n      <div\n        className=\"p-3 h-36 border-2 border-deus-text mb-2 rounded-lg flex flex-col justify-between\"\n        style={{ width: \"fit-content\" }}\n      >\n        <div>\n          Connecting the wallet is only supported through the Keplr extension.{\" \"}\n          <br />\n          You might not be able to use your Ledger to sign transactions for now.{\" \"}\n          <br />\n          We are working on it!\n        </div>\n        <div className=\"flex item-center text-xl font-bold\">\n          <div className=\"flex items-center justify-center\">\n            <FaArrowLeft size={22} className=\"mr-3\" />\n          </div>\n          Connect your wallet to explore CW1 Subkeys\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Welcome\n","import { useWallet } from \"src/services/wallet\"\n\nconst WalletAddress = (): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div className=\"flex justify-center text-lg font-bold items-center bg-gray-800 rounded-lg p-2 px-5 text-deus-text\">\n      Your wallet address: {wallet.address}\n    </div>\n  )\n}\n\nexport default WalletAddress\n","import WalletAddress from \"src/components/WalletAddress\"\nimport { useWallet } from \"src/services/wallet\"\n\nconst Section = ({ children }: any): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div className=\"w-full h-full flex items-center justify-center overflow-hidden relative\">\n      <div className=\"text-deus-text h-5/6 w-5/6 p-10 bg-deus-gray rounded-xl overflow-auto\">\n        {children}\n      </div>\n      {wallet.initialized && (\n        <div className=\"absolute top-10\">\n          <WalletAddress />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Section\n","interface InputProps {\n  type?: string\n  placeholder: string\n  value: string\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  onKeyPress?: (e: React.KeyboardEvent<HTMLInputElement>) => void\n  className?: string\n  label?: string\n  width?: string\n}\n\nconst TextInput = ({\n  type = \"text\",\n  placeholder,\n  value,\n  onChange = () => {},\n  className = \"\",\n  onKeyPress = () => {},\n  label = \"\",\n  width = \"w-3/6\",\n}: InputProps): JSX.Element => {\n  return (\n    <>\n      {label !== \"\" && (\n        <label className=\"label\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <input\n        type={type}\n        placeholder={placeholder}\n        className={`input input-bordered placeholder-gray-500 bg-gray-300 text-deus-gray font-bold ${width} ${className}`}\n        value={value}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n    </>\n  )\n}\n\nexport default TextInput\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { okaidia } from \"react-syntax-highlighter/dist/esm/styles/prism\"\n\ninterface PrettyPrintProps {\n  data: any\n  style?: object\n}\n\nconst PrettyPrint = ({ data, style = {} }: PrettyPrintProps): JSX.Element => {\n  if (!data) return <></>\n\n  return (\n    <SyntaxHighlighter\n      customStyle={{ ...style }}\n      language=\"json\"\n      style={okaidia}\n    >\n      {JSON.stringify(data, null, 2)}\n    </SyntaxHighlighter>\n  )\n}\n\nexport default PrettyPrint\n","interface InputProps {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  className?: string\n  label?: string\n  checked: boolean\n}\n\nconst Checkbox = ({\n  onChange = () => {},\n  className = \"\",\n  label = \"\",\n  checked = false,\n}: InputProps): JSX.Element => {\n  return (\n    <div className=\"flex items-center bg-gray-700 p-2 rounded-lg bg-opacity-40 px-3\">\n      {label !== \"\" && (\n        <label className=\"label mr-3\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <input\n        type=\"checkbox\"\n        className={`checkbox border-deus-text ${className}`}\n        onChange={onChange}\n        checked={checked}\n      />\n    </div>\n  )\n}\n\nexport default Checkbox\n","import { useWallet } from \"src/services/wallet\"\n\ninterface ButtonProps {\n  onClick: () => void\n  className?: string\n  loading?: boolean\n  text: string\n}\n\nconst Button = ({\n  onClick,\n  className = \"\",\n  loading = false,\n  text,\n}: ButtonProps): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div\n      data-tip=\"Connect wallet to continue\"\n      className={`${!wallet.initialized ? \"tooltip\" : \"\"} w-3/6`}\n    >\n      <button\n        onClick={onClick}\n        className={`btn ${\n          loading ? \"loading\" : \"\"\n        } capitalize ${className} w-full text-lg`}\n        disabled={!wallet.initialized}\n        style={{ color: \"white\" }}\n      >\n        {!loading && text}\n      </button>\n    </div>\n  )\n}\n\nexport default Button\n","interface TransactionHashProps {\n  txHash: string\n}\n\nconst TransactionHash = ({ txHash }: TransactionHashProps): JSX.Element => {\n  if (txHash === \"\") return <></>\n\n  return (\n    <div className=\"flex p-3 bg-deus-pink text-white bg-gradient-to-r from-deus-pink to-deus-purple rounded-lg font-bold\">\n      <div>Transaction hash: </div>\n      <div className=\"ml-2\">{txHash}</div>\n    </div>\n  )\n}\n\nexport default TransactionHash\n","import React, { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport TextInput from \"src/components/TextInput\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport Checkbox from \"src/components/Checkbox\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst Instantiate = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys\n\n  const [input, setInput] = useState<string>(\"\")\n  const [codeId, setCodeId] = useState<string>(\"\")\n  const [mutable, setMutable] = useState<boolean>(false)\n  const [admins, setAdmins] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [txHash, setTxHash] = useState<string>(\"\")\n\n  const inputOnKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (input === \"\") return\n    if (e.key === \"Enter\") {\n      if (!!admins.find((admin) => admin === input)) return\n      setAdmins([...admins, input])\n      setInput(\"\")\n    }\n  }\n\n  const codeIdOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCodeId(e.target.value)\n  }\n\n  const instantiateOnClick = () => {\n    if (codeId === \"\" || admins.length === 0) {\n      errorToast(\"Fill required fields\")\n      return\n    }\n    if (!contract) return\n\n    setLoading(true)\n\n    contract\n      .instantiate({\n        codeId: parseInt(codeId),\n        initMsg: { admins, mutable },\n        label: \"cw1-subkeys-contract\",\n      })\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <SectionLayout>\n      <div className=\"form-control items-center\">\n        <TextInput\n          placeholder=\"Admin address\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={inputOnKeyPress}\n          label=\"Press enter after entering admin address\"\n          className=\"mb-3\"\n        />\n        {admins.length !== 0 && (\n          <PrettyPrint data={admins} style={{ width: \"70%\" }} />\n        )}\n        <div className=\"my-3\">\n          <Checkbox\n            checked={mutable}\n            onChange={() => setMutable(!mutable)}\n            label=\"Are admins mutable?\"\n          />\n        </div>\n        <TextInput\n          type=\"number\"\n          placeholder=\"Code ID\"\n          value={codeId}\n          onChange={codeIdOnChange}\n          label=\"Enter Code ID for the contract\"\n        />\n        <br />\n        <Button\n          onClick={instantiateOnClick}\n          className=\"btn-primary\"\n          text=\"Instantiate\"\n          loading={loading}\n        />\n        <br />\n        <TransactionHash txHash={txHash} />\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Instantiate\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport { SendMsg } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst SendTokens = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [addressToSend, setAddressToSend] = useState<string>(\"\")\n  const [amountToSend, setAmountToSend] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (addressToSend === \"\") return errorToast(\"Enter an address to send.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: SendMsg = {\n      bank: {\n        send: {\n          from_address: contract.contractAddress,\n          to_address: addressToSend,\n          amount: [amount],\n        },\n      },\n    }\n\n    setLoading(true)\n\n    contract\n      .execute(wallet.address, [message])\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Address\"\n        value={addressToSend}\n        onChange={(e) => setAddressToSend(e.target.value)}\n        label=\"Address to send\"\n        className=\"mb-4\"\n      />\n      <TextInput\n        type=\"number\"\n        placeholder=\"Juno amount\"\n        value={amountToSend}\n        onChange={(e) => setAmountToSend(e.target.value)}\n        label=\"Amount to send\"\n        className=\"mb-4\"\n      />\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default SendTokens\n","interface DropdownProps {\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n  value: string\n  options: string[]\n  label?: string\n  className?: string\n}\n\nconst Dropdown = ({\n  onChange,\n  value,\n  options,\n  label = \"\",\n  className = \"\",\n}: DropdownProps): JSX.Element => {\n  return (\n    <div className=\"flex items-center w-full justify-center\">\n      {label !== \"\" && (\n        <label className=\"label mr-3\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <select\n        className={`select select-bordered max-w-xs bg-gray-300 text-deus-gray w-full ${className}`}\n        onChange={onChange}\n        value={value}\n      >\n        {options.map((option, idx) => {\n          return (\n            <option value={option.toLowerCase().split(\" \").join(\"-\")} key={idx}>\n              {option}\n            </option>\n          )\n        })}\n      </select>\n    </div>\n  )\n}\n\nexport default Dropdown\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport TextInput from \"src/components/TextInput\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\"Never\", \"At height\", \"At time\"]\n\nconst IncreaseAllowance = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [allowanceAddress, setAllowanceAddress] = useState<string>(\"\")\n  const [allowanceAmount, setAllowanceAmount] = useState<string>(\"\")\n  const [expiration, setExpiration] = useState<string>(\"never\")\n  const [expirationValue, setExpirationValue] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (allowanceAddress === \"\") return errorToast(\"Enter an address to send.\")\n    if (expiration !== \"never\" && expirationValue === \"\")\n      return errorToast(\"Enter an expiration time.\")\n\n    let expirationTime: any = {\n      never: {},\n    }\n    if (expiration === \"at-height\") {\n      expirationTime = { at_height: { height: expirationValue } }\n    }\n    if (expiration === \"at-time\") {\n      expirationTime = { at_time: { time: expirationValue } }\n    }\n\n    const amount = convertToNativeCoin(allowanceAmount)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    setLoading(true)\n\n    contract\n      .increaseAllowance(\n        wallet.address,\n        allowanceAddress,\n        amount,\n        expirationTime\n      )\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to increase allowance\"\n        value={allowanceAddress}\n        onChange={(e) => setAllowanceAddress(e.target.value)}\n        placeholder=\"Address\"\n      />\n      <TextInput\n        type=\"number\"\n        label=\"Amount to increase\"\n        value={allowanceAmount}\n        onChange={(e) => setAllowanceAmount(e.target.value)}\n        placeholder=\"Juno amount\"\n      />\n      <br />\n      <div className=\"flex items-center w-5/6 my-3\">\n        <Dropdown\n          label=\"Select expiration time\"\n          onChange={(e) => {\n            setExpirationValue(\"\")\n            setExpiration(e.target.value)\n          }}\n          value={expiration}\n          options={DROPDOWN_OPTIONS}\n        />\n        {(expiration === \"at-height\" || expiration === \"at-time\") && (\n          <TextInput\n            type=\"number\"\n            placeholder={expiration === \"at-height\" ? \"Block height\" : \"Time\"}\n            value={expirationValue}\n            onChange={(e) => setExpirationValue(e.target.value)}\n            width=\"w-44\"\n          />\n        )}\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default IncreaseAllowance\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport TextInput from \"src/components/TextInput\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\"Never\", \"At height\", \"At time\"]\n\nconst DecreaseAllowance = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [allowanceAddress, setAllowanceAddress] = useState<string>(\"\")\n  const [allowanceAmount, setAllowanceAmount] = useState<string>(\"\")\n  const [expiration, setExpiration] = useState<string>(\"never\")\n  const [expirationValue, setExpirationValue] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (allowanceAddress === \"\") return errorToast(\"Enter an address to send.\")\n    if (expiration !== \"never\" && expirationValue === \"\")\n      return errorToast(\"Enter an expiration time.\")\n\n    let expirationTime: any = {\n      never: {},\n    }\n    if (expiration === \"at-height\") {\n      expirationTime = { at_height: { height: expirationValue } }\n    }\n    if (expiration === \"at-time\") {\n      expirationTime = { at_time: { time: expirationValue } }\n    }\n\n    const amount = convertToNativeCoin(allowanceAmount)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    setLoading(true)\n\n    contract\n      .decreaseAllowance(\n        wallet.address,\n        allowanceAddress,\n        amount,\n        expirationTime\n      )\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to decrease allowance\"\n        value={allowanceAddress}\n        onChange={(e) => setAllowanceAddress(e.target.value)}\n        placeholder=\"Address\"\n      />\n      <TextInput\n        type=\"number\"\n        label=\"Amount to decrease\"\n        value={allowanceAmount}\n        onChange={(e) => setAllowanceAmount(e.target.value)}\n        placeholder=\"Juno amount\"\n      />\n      <br />\n      <div className=\"flex items-center w-5/6 my-3\">\n        <Dropdown\n          label=\"Select expiration time\"\n          onChange={(e) => {\n            setExpirationValue(\"\")\n            setExpiration(e.target.value)\n          }}\n          value={expiration}\n          options={DROPDOWN_OPTIONS}\n        />\n        {(expiration === \"at-height\" || expiration === \"at-time\") && (\n          <TextInput\n            type=\"number\"\n            placeholder={expiration === \"at-height\" ? \"Block height\" : \"Time\"}\n            value={expirationValue}\n            onChange={(e) => setExpirationValue(e.target.value)}\n            width=\"w-44\"\n          />\n        )}\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default DecreaseAllowance\n","import React, { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\n\nconst UpdateAdmins = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [input, setInput] = useState<string>(\"\")\n  const [admins, setAdmins] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [txHash, setTxHash] = useState<string>(\"\")\n\n  const inputOnKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (input === \"\") return\n    if (e.key === \"Enter\") {\n      if (!!admins.find((admin) => admin === input)) return\n      setAdmins([...admins, input])\n      setInput(\"\")\n    }\n  }\n\n  const execute = () => {\n    if (admins.length === 0) {\n      errorToast(\"Fill required fields\")\n      return\n    }\n    if (!contract) return\n\n    setLoading(true)\n\n    contract\n      .updateAdmins(wallet.address, admins)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Admin address\"\n        onKeyPress={inputOnKeyPress}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        label=\"Press enter after entering admin address\"\n        className=\"mb-3\"\n      />\n      {admins.length !== 0 && (\n        <PrettyPrint data={admins} style={{ width: \"70%\" }} />\n      )}\n      <br />\n      <Button\n        className=\"btn-primary\"\n        onClick={execute}\n        text=\"Execute\"\n        loading={loading}\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default UpdateAdmins\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport { useWallet } from \"src/services/wallet\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst FreezeAdmins = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n\n    contract\n      .freeze(wallet.address)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <div className=\"text-deus-red font-bold text-xl w-3/6 text-center my-5\">\n        This is an irreversible action. <br /> You will not be able to update\n        the admins after this executing this message.\n      </div>\n      <Button\n        className=\"btn-primary mt-3\"\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default FreezeAdmins\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport { Permissions } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Checkbox from \"src/components/Checkbox\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst SetPermissions = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [address, setAddress] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n  const [permissions, setPermissions] = useState<Permissions>({\n    delegate: false,\n    undelegate: false,\n    redelegate: false,\n    withdraw: false,\n  })\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (address === \"\") return errorToast(\"Enter an address to send.\")\n\n    setLoading(true)\n\n    contract\n      .setPermissions(wallet.address, address, permissions)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to set permissions\"\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <br />\n      <div className=\"flex items-center w-4/6 justify-between\">\n        <Checkbox\n          checked={permissions.delegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              delegate: !permissions.delegate,\n            })\n          }\n          label=\"Delegate\"\n        />\n        <Checkbox\n          checked={permissions.undelegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              undelegate: !permissions.undelegate,\n            })\n          }\n          label=\"Undelegate\"\n        />\n        <Checkbox\n          checked={permissions.redelegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              redelegate: !permissions.redelegate,\n            })\n          }\n          label=\"Redelegate\"\n        />\n        <Checkbox\n          checked={permissions.withdraw}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              withdraw: !permissions.withdraw,\n            })\n          }\n          label=\"Withdraw\"\n        />\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        className=\"btn-primary\"\n        text=\"Execute\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default SetPermissions\n","import { useEffect, useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport TextInput from \"./TextInput\"\n\nconst ContractAddress = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys\n  const [contractAddress, setContractAddress] = useState<string>(\"\")\n\n  useEffect(() => {\n    if (localStorage.getItem(\"contract_address\"))\n      setContractAddress(localStorage.getItem(\"contract_address\") || \"\")\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"contract_address\", contractAddress)\n    contract?.updateContractAddress(contractAddress)\n  }, [contractAddress, contract])\n\n  return (\n    <div className=\"flex justify-center mt-2\">\n      <div className=\"flex justify-center text-lg font-bold items-center\">\n        <span className=\"text-deus-text\">Contract address:</span>\n      </div>\n      <TextInput\n        placeholder=\"Enter contract address\"\n        className=\"ml-2 w-4/6 text-center px-3\"\n        value={contractAddress}\n        onChange={(e) => setContractAddress(e.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default ContractAddress\n","import { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport SendTokens from \"./SendTokens\"\nimport IncreaseAllowance from \"./IncreaseAllowance\"\nimport DecreaseAllowace from \"./DecreaseAllowace\"\nimport UpdateAdmins from \"./UpdateAdmins\"\nimport FreezeAdmins from \"./FreezeAdmins\"\nimport SetPermissions from \"./SetPermissions\"\nimport ContractAddress from \"src/components/ContractAddress\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Send tokens\",\n  \"Increase Allowance\",\n  \"Decrease Allowance\",\n  \"Update Admins\",\n  \"Freeze Admins\",\n  \"Set Permissions\",\n]\n\nconst Execute = (): JSX.Element => {\n  const [option, setOption] = useState<string>(\"send-tokens\")\n\n  return (\n    <SectionLayout>\n      <ContractAddress />\n      <br />\n      <Dropdown\n        onChange={(e) => setOption(e.target.value)}\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        label=\"Select execute operation\"\n      />\n      <div className=\"pt-4\">\n        {option === \"send-tokens\" && <SendTokens />}\n        {option === \"increase-allowance\" && <IncreaseAllowance />}\n        {option === \"decrease-allowance\" && <DecreaseAllowace />}\n        {option === \"update-admins\" && <UpdateAdmins />}\n        {option === \"freeze-admins\" && <FreezeAdmins />}\n        {option === \"set-permissions\" && <SetPermissions />}\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Execute\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { AllowanceInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\n\nconst AllAllowances = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<readonly AllowanceInfo[]>()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      .allAllowances()\n      .then((data) => {\n        setLoading(false)\n        setData(data.allowances)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport Button from \"src/components/Button\"\n\nconst Admins = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [admins, setAdmins] = useState<readonly string[]>()\n  // const [isMutable, setIsMutable] = useState<boolean>(false)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      ?.admins()\n      .then((data) => {\n        setLoading(false)\n        setAdmins(data.admins)\n        // setIsMutable(data.mutable)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={admins} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default Admins\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { AllowanceInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\nimport TextInput from \"src/components/TextInput\"\n\nconst AllAllowances = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<AllowanceInfo>()\n  const [address, setAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (address === \"\") return errorToast(\"Enter an adress.\")\n\n    setLoading(true)\n    contract\n      ?.allowance(address)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        label=\"Address to check allowance\"\n      />\n      <br />\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { PermissionsInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\n\nconst AllPermissions = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<readonly PermissionsInfo[]>()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      ?.allPermissions()\n      .then((data) => {\n        setLoading(false)\n        setData(data.permissions)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllPermissions\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { PermissionsInfo } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\n\nconst AllPermissions = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<PermissionsInfo>()\n  const [address, setAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (address === \"\") return errorToast(\"Enter an adress.\")\n\n    setLoading(true)\n    contract\n      ?.permissions(address)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        label=\"Address to check permission\"\n      />\n      <br />\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllPermissions\n","import { useState } from \"react\"\nimport {\n  useContracts,\n  // WithdrawMsg,\n} from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport { useWallet } from \"src/services/wallet\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport {\n  CanExecuteResponse,\n  SendMsg,\n  DelegateMsg,\n  UndelegateMsg,\n  RedelegateMsg,\n} from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Send\",\n  \"Delegate\",\n  \"Undelegate\",\n  \"Redelegate\",\n  // 'Withdraw'\n]\n\nconst AllAllowances = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [option, setOption] = useState<string>(\"send\")\n  const [data, setData] = useState<CanExecuteResponse>()\n  const [addressToSend, setAddressToSend] = useState<string>(\"\")\n  const [amountToSend, setAmountToSend] = useState<string>(\"\")\n  const [srcValidatorAddress, setSrcValidatorAddress] = useState<string>(\"\")\n  const [dstValidatorAddress, setDstValidatorAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    switch (option) {\n      case \"send\":\n        return checkSendMsg()\n      case \"delegate\":\n        return checkDelegateMsg()\n      case \"undelegate\":\n        return checkUndelegateMsg()\n      case \"redelegate\":\n        return checkRedelegateMsg()\n    }\n  }\n\n  const checkSendMsg = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (addressToSend === \"\") return errorToast(\"Enter an adress.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: SendMsg = {\n      bank: {\n        send: {\n          from_address: contract.contractAddress,\n          to_address: addressToSend,\n          amount: [amount],\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkDelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter an adress.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: DelegateMsg = {\n      staking: {\n        delegate: {\n          validator: srcValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkUndelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter an adress.\")\n    if (amountToSend === \"\") return errorToast(\"Enter an amount.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: UndelegateMsg = {\n      staking: {\n        undelegate: {\n          validator: srcValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkRedelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter a source adress.\")\n    if (dstValidatorAddress === \"\")\n      return errorToast(\"Enter a destination adress.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: RedelegateMsg = {\n      staking: {\n        redelegate: {\n          src_validator: srcValidatorAddress,\n          dst_validator: dstValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Dropdown\n        onChange={(e) => {\n          setAmountToSend(\"\")\n          setOption(e.target.value)\n        }}\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        label=\"Select execute message to check\"\n        className=\"mb-3\"\n      />\n      {option === \"send\" && (\n        <TextInput\n          value={addressToSend}\n          onChange={(e) => setAddressToSend(e.target.value)}\n          placeholder=\"Address\"\n          label=\"Address to send\"\n        />\n      )}\n      {(option === \"delegate\" || option === \"undelegate\") && (\n        <TextInput\n          value={srcValidatorAddress}\n          onChange={(e) => setSrcValidatorAddress(e.target.value)}\n          placeholder={`${\n            option === \"delegate\" ? \"Validator\" : \"Source validator\"\n          } address`}\n          label={`Validator address to ${option}`}\n        />\n      )}\n      {option === \"redelegate\" && (\n        <TextInput\n          value={dstValidatorAddress}\n          onChange={(e) => setDstValidatorAddress(e.target.value)}\n          placeholder=\"Destination validator address\"\n          label=\"Validator address to redelegate\"\n        />\n      )}\n      <TextInput\n        type=\"number\"\n        value={amountToSend}\n        onChange={(e) => setAmountToSend(e.target.value)}\n        placeholder=\"Juno amount\"\n        label={`Amount to ${option}`}\n      />\n      <br />\n      <Button\n        className=\"btn-primary\"\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport AllAllowances from \"./AllAllowances\"\nimport Admins from \"./Admins\"\nimport Allowances from \"./Allowances\"\nimport AllPermissions from \"./AllPermissions\"\nimport Permissions from \"./Permissions\"\nimport CanExecute from \"./CanExecute\"\nimport ContractAddress from \"src/components/ContractAddress\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Admins\",\n  \"All allowances\",\n  \"Allowance\",\n  \"All permissions\",\n  \"Permission\",\n  \"Can execute\",\n]\n\nconst Query = (): JSX.Element => {\n  const [option, setOption] = useState<string>(\"admins\")\n\n  return (\n    <SectionLayout>\n      <ContractAddress />\n      <br />\n      <Dropdown\n        label=\"Select query\"\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        onChange={(e) => setOption(e.target.value)}\n      />\n      <div className=\"pt-4\">\n        {option === \"admins\" && <Admins />}\n        {option === \"all-allowances\" && <AllAllowances />}\n        {option === \"allowance\" && <Allowances />}\n        {option === \"all-permissions\" && <AllPermissions />}\n        {option === \"permission\" && <Permissions />}\n        {option === \"can-execute\" && <CanExecute />}\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Query\n","import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\"\nimport { ToastContainer } from \"react-toastify\"\nimport { WalletProvider } from \"./services/wallet\"\nimport { ContractsProvider } from \"./contracts\"\nimport PageLayout from \"./layout/Page\"\nimport {\n  executePath,\n  instantiatePath,\n  queryPath /* contractPath */,\n} from \"./routes\"\n// import { ProtectedSwitch } from \"./routes/ProtectedSwitch\"\nimport Welcome from \"./pages/Welcome\"\n// import Contract from \"./pages/Contract\"\nimport Instantiate from \"./pages/Instantiate\"\nimport Execute from \"./pages/Execute\"\nimport Query from \"./pages/Query\"\nimport \"react-toastify/dist/ReactToastify.css\"\n\nconst App = (): JSX.Element => {\n  return (\n    <WalletProvider>\n      <ContractsProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <PageLayout>\n            <Switch>\n              <Route exact path=\"/\" component={Welcome} />\n              <Route\n                exact\n                path={`/${instantiatePath}`}\n                component={Instantiate}\n              />\n              <Route exact path={`/${executePath}`} component={Execute} />\n              <Route exact path={`/${queryPath}`} component={Query} />\n              {/* <ProtectedSwitch>\n                <Route exact path={`/${contractPath}`} component={Contract} />\n                <Route\n                  exact\n                  path={`/${instantiatePath}`}\n                  component={Instantiate}\n                />\n                <Route exact path={`/${executePath}`} component={Execute} />\n                <Route exact path={`/${queryPath}`} component={Query} />\n              </ProtectedSwitch> */}\n              <Redirect to=\"/\" />\n            </Switch>\n          </PageLayout>\n        </Router>\n        <ToastContainer theme=\"dark\" />\n      </ContractsProvider>\n    </WalletProvider>\n  )\n}\n\nexport default App\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}