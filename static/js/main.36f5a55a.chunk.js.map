{"version":3,"sources":["config.ts","utils/currency.ts","utils/toast.ts","utils/route.ts","services/keplr.ts","services/wallet.tsx","contracts/cw1-subkeys/contract.ts","contracts/index.tsx","contracts/cw1-subkeys/useContract.ts","routes/index.ts","components/Navbar.tsx","components/Dropdown.tsx","components/Sidebar.tsx","layout/Page.tsx","pages/Welcome.tsx","components/WalletAddress.tsx","layout/Section.tsx","components/TextInput.tsx","components/PrettyPrint.tsx","components/Checkbox.tsx","components/Button.tsx","components/TransactionHash.tsx","pages/Instantiate.tsx","pages/Execute/SendTokens.tsx","pages/Execute/IncreaseAllowance.tsx","pages/Execute/DecreaseAllowace.tsx","pages/Execute/UpdateAdmins.tsx","pages/Execute/FreezeAdmins.tsx","pages/Execute/SetPermissions.tsx","components/ContractAddress.tsx","pages/Execute/index.tsx","pages/Query/AllAllowances.tsx","pages/Query/Admins.tsx","pages/Query/Allowances.tsx","pages/Query/AllPermissions.tsx","pages/Query/Permissions.tsx","pages/Query/CanExecute.tsx","pages/Query/index.tsx","App.tsx","index.tsx"],"names":["keplrConfig","config","chainId","chainName","rpc","rpcUrl","rest","httpUrl","bech32Config","bech32PrefixAccAddr","addressPrefix","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMap","feeToken","denom","coinMinimalDenom","coinDecimals","fractionalDigits","stakingToken","feeCurrencies","stakeCurrency","gasPriceStep","low","gasPrice","average","high","bip44","coinType","networkConfig","ujuno","fees","upload","init","exec","faucetUrl","ujunox","getConfig","network","convertToNativeCoin","amount","isNaN","Number","coin","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","autoClose","style","width","errorToast","message","Toast","error","formatRoute","route","split","join","createClient","signer","a","SigningCosmWasmClient","connectWithSigner","loadKeplrWallet","anyWindow","window","getOfflineSigner","Error","keplr","enable","experimentalSuggestChain","getOfflineSignerAuto","signAmino","sign","Promise","resolve","throwNotInitialized","defaultContext","initialized","clear","address","balance","refreshBalance","getClient","getSigner","updateSigner","setNetwork","CosmWasmContext","React","useWallet","WalletProvider","children","useState","setSigner","client","setClient","contextWithInit","value","setValue","length","getBalance","push","useEffect","console","log","getAccounts","localStorage","setItem","bind","Provider","CW1","options","use","contractAddress","allowance","queryContractSmart","spender","allAllowances","startAfter","limit","all_allowances","start_after","permissions","allPermissions","all_permissions","canExecute","sender","msg","can_execute","admins","admin_list","freeze","senderAddress","fee","calculateFee","execute","result","transactionHash","updateAdmins","update_admins","msgs","increaseAllowance","expires","increase_allowance","decreaseAllowance","decrease_allowance","setPermissions","set_permissions","instantiate","codeId","initMsg","label","cw1Subkeys","ContractsContext","createContext","useContracts","useContext","ContractsProvider","wallet","getItem","setAddress","setCW1","contractConfig","GasPrice","fromString","cw1Contract","CW1Init","getCW1Instance","useCallback","reject","then","catch","updateContractAddress","useCW1Contract","instantiatePath","executePath","queryPath","contractPath","Navbar","className","htmlFor","size","Dropdown","onChange","isColumn","map","option","idx","toLowerCase","Sidebar","content","initializing","setInitializing","connect","err","disconnect","useKeplr","location","useLocation","networkOnChange","e","target","id","type","to","backgroundColor","pathname","href","rel","src","alt","onClick","PageLayout","history","useHistory","path","replace","Welcome","WalletAddress","Section","TextInput","placeholder","onKeyPress","PrettyPrint","data","customStyle","language","okaidia","JSON","stringify","Checkbox","checked","Button","loading","text","textSize","data-tip","disabled","color","TransactionHash","txHash","Instantiate","contract","input","setInput","setCodeId","mutable","setMutable","setAdmins","setLoading","setTxHash","setContractAddress","key","find","admin","parseInt","SendTokens","addressToSend","setAddressToSend","amountToSend","setAmountToSend","setAllowance","bank","send","from_address","to_address","hash","DROPDOWN_OPTIONS","IncreaseAllowance","allowanceAddress","setAllowanceAddress","allowanceAmount","setAllowanceAmount","expiration","setExpiration","expirationValue","setExpirationValue","expirationTime","never","at_height","at_time","DecreaseAllowance","UpdateAdmins","FreezeAdmins","SetPermissions","delegate","undelegate","redelegate","withdraw","ContractAddress","Execute","setOption","DecreaseAllowace","AllAllowances","setData","allowances","Admins","AllPermissions","srcValidatorAddress","setSrcValidatorAddress","dstValidatorAddress","setDstValidatorAddress","checkSendMsg","checkDelegateMsg","staking","validator","checkUndelegateMsg","checkRedelegateMsg","src_validator","dst_validator","Query","Allowances","Permissions","CanExecute","App","basename","process","Page","exact","component","theme","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.36f5a55a.chunk.js","sourcesContent":["import { CoinMap } from \"./utils\"\n\nexport interface AppConfig {\n  readonly chainId: string\n  readonly chainName: string\n  readonly addressPrefix: string\n  readonly rpcUrl: string\n  readonly httpUrl?: string\n  readonly faucetUrl?: string\n  readonly feeToken: string\n  readonly stakingToken: string\n  readonly coinMap: CoinMap\n  readonly gasPrice: number\n  readonly fees: FeeOptions\n  readonly codeId?: number\n}\n\nexport interface FeeOptions {\n  upload: number\n  exec: number\n  init: number\n}\n\nexport interface KeplrCoin {\n  readonly coinDenom: string\n  readonly coinMinimalDenom: string\n  readonly coinDecimals: number\n}\n\nexport interface KeplrConfig {\n  readonly chainId: string\n  readonly chainName: string\n  readonly rpc: string\n  readonly rest?: string\n  readonly bech32Config: {\n    readonly bech32PrefixAccAddr: string\n    readonly bech32PrefixAccPub: string\n    readonly bech32PrefixValAddr: string\n    readonly bech32PrefixValPub: string\n    readonly bech32PrefixConsAddr: string\n    readonly bech32PrefixConsPub: string\n  }\n  readonly currencies: readonly KeplrCoin[]\n  readonly feeCurrencies: readonly KeplrCoin[]\n  readonly stakeCurrency: KeplrCoin\n  readonly gasPriceStep: {\n    readonly low: number\n    readonly average: number\n    readonly high: number\n  }\n  readonly bip44: { readonly coinType: number }\n  readonly coinType: number\n}\n\nexport const junoMainnetConfig: AppConfig = {\n  chainId: \"juno-1\",\n  chainName: \"Juno\",\n  addressPrefix: \"juno\",\n  rpcUrl: \"https://rpc.juno-1.deuslabs.fi\",\n  // httpUrl: \"https://rpc.juno-1.deuslabs.fi\",\n  feeToken: \"ujuno\",\n  stakingToken: \"ujuno\",\n  coinMap: {\n    ujuno: { denom: \"JUNO\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n  fees: {\n    upload: 1500000,\n    init: 500000,\n    exec: 200000,\n  },\n}\n\nexport const uniConfig: AppConfig = {\n  chainId: \"uni-1\",\n  chainName: \"Uni\",\n  addressPrefix: \"juno\",\n  rpcUrl: \"https://rpc.uni.juno.deuslabs.fi\",\n  httpUrl: \"https://lcd.uni.juno.deuslabs.fi\",\n  faucetUrl: \"https://faucet.uni.juno.deuslabs.fi\",\n  feeToken: \"ujunox\",\n  stakingToken: \"ujunox\",\n  coinMap: {\n    ujunox: { denom: \"JUNOX\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n  fees: {\n    upload: 1500000,\n    init: 500000,\n    exec: 200000,\n  },\n}\n\nexport const keplrConfig = (config: AppConfig): KeplrConfig => ({\n  chainId: config.chainId,\n  chainName: config.chainName,\n  rpc: config.rpcUrl,\n  rest: config.httpUrl,\n  bech32Config: {\n    bech32PrefixAccAddr: `${config.addressPrefix}`,\n    bech32PrefixAccPub: `${config.addressPrefix}pub`,\n    bech32PrefixValAddr: `${config.addressPrefix}valoper`,\n    bech32PrefixValPub: `${config.addressPrefix}valoperpub`,\n    bech32PrefixConsAddr: `${config.addressPrefix}valcons`,\n    bech32PrefixConsPub: `${config.addressPrefix}valconspub`,\n  },\n  currencies: [\n    {\n      coinDenom: config.coinMap[config.feeToken].denom,\n      coinMinimalDenom: config.feeToken,\n      coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n    },\n    {\n      coinDenom: config.coinMap[config.stakingToken].denom,\n      coinMinimalDenom: config.stakingToken,\n      coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n    },\n  ],\n  feeCurrencies: [\n    {\n      coinDenom: config.coinMap[config.feeToken].denom,\n      coinMinimalDenom: config.feeToken,\n      coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n    },\n  ],\n  stakeCurrency: {\n    coinDenom: config.coinMap[config.stakingToken].denom,\n    coinMinimalDenom: config.stakingToken,\n    coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n  },\n  gasPriceStep: {\n    low: config.gasPrice / 2,\n    average: config.gasPrice,\n    high: config.gasPrice * 2,\n  },\n  bip44: { coinType: 118 },\n  coinType: 118,\n})\n\nexport const networkConfig = {\n  \"juno-mainnet\": junoMainnetConfig,\n  \"juno-uni-testnet\": uniConfig,\n}\n\nexport const getConfig = (network: string) => networkConfig[network]\n","import { coin } from \"@cosmjs/proto-signing\"\nimport { getConfig } from \"src/config\"\n\nexport interface MappedCoin {\n  readonly denom: string\n  readonly fractionalDigits: number\n}\n\nexport interface CoinMap {\n  readonly [key: string]: MappedCoin\n}\n\nexport function convertToNativeCoin(amount: string, network: string) {\n  if (amount === \"\" || isNaN(Number(amount))) return null\n\n  return coin(Number(amount), getConfig(network).feeToken)\n}\n","import { toast as Toast, ToastOptions } from \"react-toastify\"\n\nconst config: ToastOptions = {\n  hideProgressBar: true,\n  closeOnClick: false,\n  pauseOnHover: false,\n  draggable: false,\n  progress: undefined,\n  position: \"top-left\",\n  autoClose: false,\n  style: { width: \"fit-content\" },\n}\n\nexport function infoToast(message: string) {\n  Toast.info(message, {\n    ...config,\n  })\n}\n\nexport function warnToast(message: string) {\n  Toast.warn(message, {\n    ...config,\n  })\n}\n\nexport function successToast(message: string) {\n  Toast.success(message, {\n    ...config,\n  })\n}\n\nexport function errorToast(message: string) {\n  Toast.error(message, {\n    ...config,\n  })\n}\n\nexport function promiseToast(\n  callback: any,\n  pendingMessage: string,\n  successMessage: string,\n  errorMessage: string\n) {\n  Toast.promise(\n    callback,\n    {\n      pending: pendingMessage,\n      success: successMessage,\n      error: errorMessage,\n    },\n    { ...config }\n  )\n}\n","export const formatRoute = (route: string) => {\n  return route.split(\" \").join(\"-\")\n}\n","import { useEffect, useState } from \"react\"\nimport { OfflineSigner } from \"@cosmjs/proto-signing\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { getConfig, keplrConfig, AppConfig } from \"src/config\"\nimport { useWallet } from \"./wallet\"\nimport { errorToast } from \"src/utils\"\n\nexport async function createClient(\n  signer: OfflineSigner,\n  network: string\n): Promise<SigningCosmWasmClient> {\n  return SigningCosmWasmClient.connectWithSigner(\n    getConfig(network).rpcUrl,\n    signer\n  )\n}\n\nexport async function loadKeplrWallet(\n  config: AppConfig\n): Promise<OfflineSigner> {\n  const anyWindow: any = window\n  if (!anyWindow.getOfflineSigner) {\n    throw new Error(\"Keplr extension is not available\")\n  }\n\n  await anyWindow.keplr.enable(config.chainId)\n  await anyWindow.keplr.experimentalSuggestChain(keplrConfig(config))\n\n  const signer = await anyWindow.getOfflineSignerAuto(config.chainId)\n  signer.signAmino = signer.signAmino ?? signer.sign\n\n  return Promise.resolve(signer)\n}\n\nexport function useKeplr() {\n  const { clear, init, initialized, network } = useWallet()\n  const [initializing, setInitializing] = useState(false)\n  const config = getConfig(network)\n\n  const disconnect = () => {\n    localStorage.clear()\n    clear()\n  }\n\n  const connect = () => {\n    setInitializing(true)\n\n    loadKeplrWallet(config)\n      .then((signer) => {\n        init(signer)\n      })\n      .catch((err) => {\n        setInitializing(false)\n        errorToast(err.message)\n      })\n  }\n\n  // useEffect(() => {\n  //   const item = localStorage.getItem(\"wallet_address\")\n\n  //   if (item) connect()\n  // }, [initialized, connect])\n\n  useEffect(() => {\n    if (!initialized) return\n\n    setInitializing(false)\n  }, [initialized])\n\n  return {\n    connect,\n    disconnect,\n    initializing,\n  }\n}\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { getConfig } from \"../config\"\nimport { createClient } from \"./keplr\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { Coin } from \"@cosmjs/stargate\"\nimport { OfflineSigner } from \"@cosmjs/proto-signing\"\n\ninterface CosmWasmContextType {\n  readonly initialized: boolean\n  readonly init: (signer: OfflineSigner) => void\n  readonly clear: () => void\n  readonly address: string\n  readonly balance: readonly Coin[]\n  readonly refreshBalance: () => Promise<void>\n  readonly getClient: () => SigningCosmWasmClient\n  readonly getSigner: () => OfflineSigner\n  readonly updateSigner: (singer: OfflineSigner) => void\n  readonly network: string\n  readonly setNetwork: (network: string) => void\n}\n\nfunction throwNotInitialized(): any {\n  throw new Error(\"Not yet initialized\")\n}\n\nconst defaultContext: CosmWasmContextType = {\n  initialized: false,\n  init: throwNotInitialized,\n  clear: throwNotInitialized,\n  address: \"\",\n  balance: [],\n  refreshBalance: throwNotInitialized,\n  getClient: throwNotInitialized,\n  getSigner: throwNotInitialized,\n  updateSigner: throwNotInitialized,\n  network: \"juno-mainnet\",\n  setNetwork: throwNotInitialized,\n}\n\nexport const CosmWasmContext =\n  React.createContext<CosmWasmContextType>(defaultContext)\n\nexport const useWallet = (): CosmWasmContextType =>\n  React.useContext(CosmWasmContext)\n\nexport function WalletProvider({\n  children,\n  network,\n  setNetwork,\n}: any): JSX.Element {\n  const [signer, setSigner] = useState<OfflineSigner>()\n  const [client, setClient] = useState<SigningCosmWasmClient>()\n  const config = getConfig(network)\n\n  const contextWithInit = {\n    ...defaultContext,\n    init: setSigner,\n    network,\n    setNetwork,\n  }\n  const [value, setValue] = useState<CosmWasmContextType>(contextWithInit)\n\n  const clear = (): void => {\n    setValue({ ...contextWithInit })\n    setClient(undefined)\n    setSigner(undefined)\n  }\n\n  // Get balance for each coin specified in config.coinMap\n  async function refreshBalance(\n    address: string,\n    balance: Coin[]\n  ): Promise<void> {\n    if (!client) return\n\n    balance.length = 0\n    for (const denom in config.coinMap) {\n      const coin = await client.getBalance(address, denom)\n      if (coin) balance.push(coin)\n    }\n\n    setValue({ ...value, balance })\n  }\n\n  const updateSigner = (signer: OfflineSigner) => {\n    setSigner(signer)\n  }\n\n  useEffect(() => {\n    if (!signer) return\n    ;(async function updateClient(): Promise<void> {\n      try {\n        const client = await createClient(signer, network)\n        setClient(client)\n      } catch (error) {\n        console.log(error)\n      }\n    })()\n  }, [signer])\n\n  useEffect(() => {\n    if (!signer || !client) return\n\n    const balance: Coin[] = []\n\n    ;(async function updateValue(): Promise<void> {\n      const address = (await signer.getAccounts())[0].address\n\n      await refreshBalance(address, balance)\n\n      localStorage.setItem(\"wallet_address\", address)\n\n      setValue({\n        initialized: true,\n        init: () => {},\n        clear,\n        address,\n        balance,\n        refreshBalance: refreshBalance.bind(null, address, balance),\n        getClient: () => client,\n        getSigner: () => signer,\n        updateSigner,\n        network,\n        setNetwork,\n      })\n    })()\n  }, [client])\n\n  useEffect(() => {\n    setValue({ ...value, network })\n  }, [network])\n\n  return (\n    <CosmWasmContext.Provider value={value}>\n      {children}\n    </CosmWasmContext.Provider>\n  )\n}\n","import { Coin } from \"@cosmjs/proto-signing\"\nimport { calculateFee } from \"@cosmjs/stargate\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { FeeOptions } from \"src/config\"\nimport { GasPrice } from \"@cosmjs/stargate\"\n\ninterface ExecuteFeeOptions {\n  fees: FeeOptions\n  gasPrice: GasPrice\n}\n\nexport interface InstantiateResponse {\n  readonly contractAddress: string\n  readonly transactionHash: string\n}\n\nexport type Expiration =\n  | { at_height: number }\n  | { at_time: string }\n  | { never: {} }\n\nexport interface CanExecuteResponse {\n  readonly can_execute: boolean\n}\n\nexport interface Permissions {\n  readonly delegate: boolean\n  readonly undelegate: boolean\n  readonly redelegate: boolean\n  readonly withdraw: boolean\n}\n\nexport interface PermissionsInfo {\n  readonly spender: string\n  readonly permissions: Permissions\n}\n\ninterface AllPermissionsResponse {\n  readonly permissions: readonly PermissionsInfo[]\n}\n\nexport interface AllowanceInfo {\n  readonly balance: readonly Coin[]\n  readonly expires: Expiration\n  readonly spender?: string\n}\n\nexport interface AllAllowancesResponse {\n  readonly allowances: readonly AllowanceInfo[]\n}\n\ninterface AdminListResponse {\n  readonly admins: readonly string[]\n  readonly mutable: boolean\n}\n\ntype CosmosMsg =\n  | SendMsg\n  | DelegateMsg\n  | UndelegateMsg\n  | RedelegateMsg\n  | WithdrawMsg\n\nexport interface SendMsg {\n  readonly bank: {\n    readonly send: {\n      readonly from_address: string\n      readonly to_address: string\n      readonly amount: readonly Coin[]\n    }\n  }\n}\n\nexport interface DelegateMsg {\n  readonly staking: {\n    readonly delegate: {\n      readonly validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface UndelegateMsg {\n  readonly staking: {\n    readonly undelegate: {\n      readonly validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface RedelegateMsg {\n  readonly staking: {\n    readonly redelegate: {\n      readonly src_validator: string\n      readonly dst_validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface WithdrawMsg {\n  readonly staking: {\n    readonly withdraw: {\n      readonly validator: string\n      readonly recipient?: string\n    }\n  }\n}\n\nexport interface CW1Instance {\n  readonly contractAddress: string\n\n  // queries\n  admins: () => Promise<AdminListResponse>\n\n  allowance: (address?: string) => Promise<AllowanceInfo>\n\n  allAllowances: (\n    startAfter?: string,\n    limit?: number\n  ) => Promise<AllAllowancesResponse>\n\n  permissions: (address?: string) => Promise<PermissionsInfo>\n\n  allPermissions: (\n    startAfter?: string,\n    limit?: number\n  ) => Promise<AllPermissionsResponse>\n  canExecute: (sender: string, msg: CosmosMsg) => Promise<CanExecuteResponse>\n\n  // actions\n  execute: (\n    senderAddress: string,\n    msgs: readonly CosmosMsg[]\n  ) => Promise<string>\n\n  freeze: (senderAddress: string) => Promise<string>\n\n  updateAdmins: (\n    senderAddress: string,\n    admins: readonly string[]\n  ) => Promise<string>\n\n  increaseAllowance: (\n    senderAddress: string,\n    recipient: string,\n    amount: Coin,\n    expires?: Expiration\n  ) => Promise<string>\n\n  decreaseAllowance: (\n    senderAddress: string,\n    recipient: string,\n    amount: Coin,\n    expires?: Expiration\n  ) => Promise<string>\n\n  setPermissions: (\n    senderAddress: string,\n    recipient: string,\n    permissions: Permissions\n  ) => Promise<string>\n}\n\nexport interface CW1Contract {\n  instantiate: (\n    senderAddress: string,\n    codeId: number,\n    initMsg: Record<string, unknown>,\n    label: string\n    // admin?: string\n  ) => Promise<InstantiateResponse>\n\n  use: (contractAddress: string) => CW1Instance\n}\n\nexport const CW1 = (\n  client: SigningCosmWasmClient,\n  options: ExecuteFeeOptions\n): CW1Contract => {\n  const use = (contractAddress: string): CW1Instance => {\n    const allowance = async (address?: string): Promise<AllowanceInfo> => {\n      return await client.queryContractSmart(contractAddress, {\n        allowance: { spender: address },\n      })\n    }\n\n    const allAllowances = async (\n      startAfter?: string,\n      limit?: number\n    ): Promise<AllAllowancesResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        all_allowances: { start_after: startAfter, limit: limit },\n      })\n    }\n\n    const permissions = async (address?: string): Promise<PermissionsInfo> => {\n      return await client.queryContractSmart(contractAddress, {\n        permissions: { spender: address },\n      })\n    }\n\n    const allPermissions = async (\n      startAfter?: string,\n      limit?: number\n    ): Promise<AllPermissionsResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        all_permissions: { start_after: startAfter, limit: limit },\n      })\n    }\n\n    const canExecute = async (\n      sender: string,\n      msg: CosmosMsg\n    ): Promise<CanExecuteResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        can_execute: { sender: sender, msg: msg },\n      })\n    }\n\n    const admins = async (): Promise<AdminListResponse> => {\n      return client.queryContractSmart(contractAddress, { admin_list: {} })\n    }\n\n    const freeze = async (senderAddress: string): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { freeze: {} },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const updateAdmins = async (\n      senderAddress: string,\n      admins: readonly string[]\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { update_admins: { admins } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const execute = async (\n      senderAddress: string,\n      msgs: readonly CosmosMsg[]\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { execute: { msgs } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const increaseAllowance = async (\n      senderAddress: string,\n      spender: string,\n      amount: Coin,\n      expires?: Expiration\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { increase_allowance: { spender, amount, expires } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const decreaseAllowance = async (\n      senderAddress: string,\n      spender: string,\n      amount: Coin,\n      expires?: Expiration\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { decrease_allowance: { spender, amount, expires } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const setPermissions = async (\n      senderAddress: string,\n      spender: string,\n      permissions: Permissions\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { set_permissions: { spender, permissions } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    return {\n      contractAddress,\n      admins,\n      allowance,\n      allAllowances,\n      permissions,\n      allPermissions,\n      canExecute,\n      execute,\n      freeze,\n      updateAdmins,\n      increaseAllowance,\n      decreaseAllowance,\n      setPermissions,\n    }\n  }\n\n  const instantiate = async (\n    senderAddress: string,\n    codeId: number,\n    initMsg: Record<string, unknown>,\n    label: string\n    // admin?: string\n  ): Promise<InstantiateResponse> => {\n    const fee = calculateFee(options.fees.init, options.gasPrice)\n\n    const result = await client.instantiate(\n      senderAddress,\n      codeId,\n      initMsg,\n      label,\n      fee\n    )\n    return {\n      contractAddress: result.contractAddress,\n      transactionHash: result.transactionHash,\n    }\n  }\n\n  return { use, instantiate }\n}\n","import React from \"react\"\nimport { UseCW1ContractProps, useCW1Contract } from \"./cw1-subkeys\"\n\ninterface ContractsContextType {\n  cw1Subkeys: UseCW1ContractProps | null\n}\n\nconst defaultContext: ContractsContextType = {\n  cw1Subkeys: null,\n}\n\nconst ContractsContext =\n  React.createContext<ContractsContextType>(defaultContext)\n\nexport const useContracts = (): ContractsContextType =>\n  React.useContext(ContractsContext)\n\nexport function ContractsProvider({\n  children,\n}: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const cw1Subkeys = useCW1Contract()\n\n  const value: ContractsContextType = { cw1Subkeys }\n\n  return (\n    <ContractsContext.Provider value={value}>\n      {children}\n    </ContractsContext.Provider>\n  )\n}\n","import { GasPrice } from \"@cosmjs/stargate\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { getConfig } from \"src/config\"\nimport { useWallet } from \"src/services/wallet\"\nimport { InstantiateResponse } from \".\"\nimport { CW1Contract, CW1Instance, CW1 as CW1Init } from \"./contract\"\ninterface InstantiateProps {\n  codeId: number\n  initMsg: Record<string, unknown>\n  label: string\n}\n\nexport interface UseCW1ContractProps {\n  instantiate: ({\n    codeId,\n    initMsg,\n    label,\n  }: InstantiateProps) => Promise<InstantiateResponse>\n  use: () => CW1Instance | undefined\n  updateContractAddress: (contractAddress: string) => void\n}\n\nexport function useCW1Contract(): UseCW1ContractProps {\n  const wallet = useWallet()\n  const config = getConfig(wallet.network)\n\n  const [address, setAddress] = useState<string>(\n    localStorage.getItem(\"contract_address\") || \"\"\n  )\n  const [CW1, setCW1] = useState<CW1Contract>()\n\n  useEffect(() => {\n    if (wallet.initialized) {\n      const getCW1Instance = async (): Promise<void> => {\n        const contractConfig = {\n          fees: config.fees,\n          gasPrice: GasPrice.fromString(`${config.gasPrice}${config.feeToken}`),\n        }\n\n        const cw1Contract = CW1Init(wallet.getClient(), contractConfig)\n        setCW1(cw1Contract)\n      }\n\n      getCW1Instance()\n    }\n  }, [wallet])\n\n  const updateContractAddress = (contractAddress: string) => {\n    setAddress(contractAddress)\n  }\n\n  const instantiate = useCallback(\n    ({\n      codeId,\n      initMsg,\n      label,\n    }: InstantiateProps): Promise<InstantiateResponse> => {\n      return new Promise((resolve, reject) => {\n        if (!CW1) return reject(\"Contract is not initialized.\")\n        CW1.instantiate(wallet.address, codeId, initMsg, label)\n          .then(resolve)\n          .catch(reject)\n      })\n    },\n    [CW1, wallet]\n  )\n\n  const use = useCallback((): CW1Instance | undefined => {\n    return CW1?.use(address)\n  }, [CW1, address])\n\n  return {\n    instantiate,\n    use,\n    updateContractAddress,\n  }\n}\n","export const instantiatePath = \"instantiate\"\nexport const executePath = \"execute\"\nexport const queryPath = \"query\"\nexport const contractPath = \"contract info\"\n","import { FaHamburger } from \"react-icons/fa\"\n\nconst Navbar = (): JSX.Element => {\n  return (\n    <div className=\"p-4 items-center bg-deus-dark text-neutral-content flex justify-end lg:hidden\">\n      <label htmlFor=\"sidebar\">\n        <FaHamburger size={24} className=\"cursor-pointer text-deus-red\" />\n      </label>\n    </div>\n  )\n}\n\nexport default Navbar\n","interface DropdownProps {\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n  value: string\n  options: string[]\n  label?: string\n  className?: string\n  width?: string\n  isColumn?: boolean\n}\n\nconst Dropdown = ({\n  onChange,\n  value,\n  options,\n  label = \"\",\n  className = \"\",\n  width = \"w-full\",\n  isColumn = false,\n}: DropdownProps): JSX.Element => {\n  return (\n    <div\n      className={`flex ${\n        isColumn ? \"flex-col\" : \"\"\n      } items-center w-full justify-center`}\n    >\n      {label !== \"\" && (\n        <label className=\"label mr-3\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <select\n        className={`select select-bordered max-w-xs bg-gray-300 text-deus-gray ${width} ${className}`}\n        onChange={onChange}\n        value={value}\n      >\n        {options.map((option, idx) => {\n          return (\n            <option value={option.toLowerCase().split(\" \").join(\"-\")} key={idx}>\n              {option}\n            </option>\n          )\n        })}\n      </select>\n    </div>\n  )\n}\n\nexport default Dropdown\n","import { useCallback } from \"react\"\nimport {\n  instantiatePath,\n  executePath,\n  queryPath,\n  contractPath,\n} from \"src/routes\"\nimport { getConfig } from \"src/config\"\nimport { useKeplr, loadKeplrWallet } from \"src/services/keplr\"\nimport { useWallet } from \"src/services/wallet\"\nimport { Link } from \"react-router-dom\"\nimport Navbar from \"./Navbar\"\nimport { FaPlay, FaMicrochip, FaSearch, FaInfoCircle } from \"react-icons/fa\"\nimport { useLocation } from \"react-router-dom\"\nimport Dropdown from \"./Dropdown\"\nimport { formatRoute } from \"src/utils\"\ninterface SidebarProps {\n  content: JSX.Element\n}\n\nconst Sidebar = ({ content }: SidebarProps): JSX.Element => {\n  const { initialized, network, setNetwork, updateSigner } = useWallet()\n  const keplr = useKeplr()\n  const location = useLocation()\n\n  const disconnect = () => {\n    keplr.disconnect()\n  }\n\n  const connect = useCallback(() => {\n    keplr.connect()\n  }, [keplr])\n\n  const buttonOnClick = () => {\n    if (initialized) disconnect()\n    else connect()\n  }\n\n  const networkOnChange = async (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setNetwork(e.target.value)\n    if (initialized) {\n      const signer = await loadKeplrWallet(getConfig(e.target.value))\n      updateSigner(signer)\n    }\n  }\n\n  return (\n    <div className=\"shadow bg-deus-dark drawer drawer-mobile h-full w-screen\">\n      <input id=\"sidebar\" type=\"checkbox\" className=\"drawer-toggle\" />\n      <div className=\"flex flex-col drawer-content\">\n        <Navbar />\n        {content}\n      </div>\n      <div className=\"drawer-side\">\n        <label htmlFor=\"sidebar\" className=\"drawer-overlay\"></label>\n        <ul className=\"menu p-4 overflow-y-auto w-80 bg-deus-gray text-deus-text\">\n          <li>\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${network}/${formatRoute(contractPath)}`}\n            >\n              <FaInfoCircle className=\"mr-4\" />\n              {contractPath}\n            </Link>\n          </li>\n          <li className=\"mb-2\">\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${network}/${instantiatePath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${instantiatePath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaMicrochip className=\"mr-4\" />\n              {instantiatePath}\n            </Link>\n          </li>\n          <li className=\"mb-2\">\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${network}/${executePath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${executePath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaPlay className=\"mr-4\" />\n              {executePath}\n            </Link>\n          </li>\n          <li>\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${network}/${queryPath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${queryPath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaSearch className=\"mr-4\" />\n              {queryPath}\n            </Link>\n          </li>\n          <li className=\"h-full justify-end pb-4\">\n            <Dropdown\n              value={network}\n              onChange={networkOnChange}\n              options={[\"Juno Mainnet\", \"Juno Uni Testnet\"]}\n              label=\"Select network\"\n              className=\"mb-3\"\n              isColumn\n            />\n            <a\n              href=\"https://deuslabs.fi\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex justify-center\"\n              style={{ backgroundColor: \"transparent\" }}\n            >\n              <div className=\"text-l font-bold\">Made by </div>\n              <img src=\"./deus-logo.png\" alt=\"deus labs\" className=\"h-10\" />\n            </a>\n            <a\n              href=\"https://cosmwasm.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex justify-center mb-2\"\n              style={{ backgroundColor: \"transparent\" }}\n            >\n              <div className=\"text-l font-bold mr-2\">Powered by </div>\n              <img src=\"./cosmwasm-logo.svg\" alt=\"cosmwasm\" className=\"h-8\" />\n            </a>\n            <div className=\"mb-3 flex items-center justify-center text-l font-bold\">\n              Made with{\" \"}\n              <img\n                src=\"./nyan-love.png\"\n                alt=\"love\"\n                className=\"h-10 ml-1 animate-bounce\"\n              />\n            </div>\n            <button\n              onClick={buttonOnClick}\n              className={`btn bg-gradient-to-r from-deus-pink to-deus-purple\n                hover:opacity-80 mx-5 capitalize text-xl ${\n                  keplr.initializing ? \"loading\" : \"\"\n                }`}\n            >\n              {keplr.initializing\n                ? \"\"\n                : `${initialized ? \"Disconnect\" : \"Connect\"} Wallet`}\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import { useEffect } from \"react\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport Sidebar from \"src/components/Sidebar\"\nimport { contractPath } from \"src/routes\"\nimport { useWallet } from \"src/services/wallet\"\nimport { formatRoute } from \"src/utils\"\n\nconst PageLayout = ({ children }: any): JSX.Element => {\n  const { network } = useWallet()\n  const location = useLocation()\n  const history = useHistory()\n\n  useEffect(() => {\n    let path =\n      location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1]\n    if (path === \"\") path = formatRoute(contractPath)\n    history.replace(`/${network}/${path}`)\n  }, [network])\n\n  return (\n    <div className=\"flex flex-col max-h-screen h-screen bg-deus-dark\">\n      <div className=\"flex-grow\">\n        <Sidebar content={children} />\n      </div>\n    </div>\n  )\n}\n\nexport default PageLayout\n","import { FaArrowLeft, FaGithub } from \"react-icons/fa\"\nimport { useWallet } from \"src/services/wallet\"\n\nconst Welcome = (): JSX.Element => {\n  const { initialized } = useWallet()\n\n  return (\n    <div className=\"p-6 bg-deus-black flex flex-col justify-end text-deus-text flex-1\">\n      <div className=\"\">\n        <div className=\"text-5xl font-bold mb-5\">\n          <a\n            href=\"https://github.com/CosmWasm/cw-plus/tree/main/contracts/cw1-subkeys\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <div className=\"flex items-center\">\n              CW1 Subkeys <FaGithub size={24} className=\"ml-2\" />\n            </div>\n          </a>{\" \"}\n        </div>\n        <p className=\"mb-3\">\n          CW1 Subkeys is initially proposed in Cosmos forum in Jun 2019 to be\n          added to the Cosmos Hub as a module. You can check out from this{\" \"}\n          <a\n            href=\"https://forum.cosmos.network/t/proposal-adding-subkey-feature-to-cosmos-sdk-and-apply-it-to-the-hub/2358/15\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"underline text-blue-400 font-bold\"\n          >\n            link.\n          </a>\n        </p>\n        <p>\n          Since then it’s still not yet added to the Hub but thanks to CosmWasm\n          and the ability to write smart contracts on Cosmos blockchains, this\n          feature is here now.\n        </p>\n        <div className=\"text-3xl font-bold my-3\">\n          How it works? <br />\n        </div>\n        <div className=\"text-lg\">\n          <div>\n            - Contract is instantiated with a given list of admins and a\n            variable for making the list mutable/immutable. <br />\n          </div>\n          <div>\n            - Admins can update the admin list if needed.\n            <br />\n          </div>\n          <div>\n            - Admins can freeze the admin list, making it immutable forever.\n            <br />\n          </div>\n          <div>\n            - Admins increase/decrease allowance for any wallet they add.\n            <br />\n          </div>\n          <div>\n            - Admins can set permissions to wallets for relaying different\n            messages. This is limited to 4 for now. (delegate, undelegate,\n            redelegate, withdraw)\n            <br />\n          </div>\n          <div>\n            - Wallet owners can relay send messages to get tokens that are\n            allocated to them with allowance feature.\n            <br />\n          </div>\n        </div>\n        <div className=\"text-3xl font-bold my-3\">\n          Use cases <br />\n        </div>\n        <div className=\"text-lg\">\n          <div>\n            - People can use this contract to utilize as a single shared account\n            between themselves. They can lock up tokens and get them based on\n            their allowance. <br />\n          </div>\n          <div>\n            - This example can also be implemented in a bigger environment such\n            as a company. Different accounts and subkeys can be made to do\n            internal allocations. <br />\n          </div>\n          <div>\n            - In our use case we have a validator that is running and in order\n            to fairly distribute the rewards among the team, we setup a single\n            account that gets all the rewards and give allowance to the people\n            who'll get those. <br />\n          </div>\n        </div>\n      </div>\n      <div className=\"flex-1 my-10\"></div>\n      {!initialized && (\n        <div className=\"h-full flex-1 flex items-end\">\n          <div\n            className=\"p-3 mb-2 flex flex-col justify-between \"\n            style={{ width: \"fit-content\" }}\n          >\n            <div className=\"flex item-center text-xl font-bold\">\n              <div className=\"flex items-center justify-center\">\n                <FaArrowLeft size={22} className=\"mr-3\" />\n              </div>\n              Connect your wallet to explore CW1 Subkeys\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Welcome\n","import { useWallet } from \"src/services/wallet\"\n\nconst WalletAddress = (): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div className=\"flex justify-center text-lg font-bold items-center bg-gray-800 rounded-lg p-2 px-5 text-deus-text\">\n      Your wallet address: {wallet.address}\n    </div>\n  )\n}\n\nexport default WalletAddress\n","import WalletAddress from \"src/components/WalletAddress\"\nimport { useWallet } from \"src/services/wallet\"\n\nconst Section = ({ children }: any): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div className=\"w-full h-full flex items-center justify-center overflow-hidden relative\">\n      <div className=\"text-deus-text h-5/6 w-5/6 p-10 bg-deus-gray rounded-xl overflow-auto\">\n        {children}\n      </div>\n      {wallet.initialized && (\n        <div className=\"absolute top-10\">\n          <WalletAddress />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Section\n","interface InputProps {\n  type?: string\n  placeholder: string\n  value: string\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  onKeyPress?: (e: React.KeyboardEvent<HTMLInputElement>) => void\n  className?: string\n  label?: string\n  width?: string\n}\n\nconst TextInput = ({\n  type = \"text\",\n  placeholder,\n  value,\n  onChange = () => {},\n  className = \"\",\n  onKeyPress = () => {},\n  label = \"\",\n  width = \"w-3/6\",\n}: InputProps): JSX.Element => {\n  return (\n    <>\n      {label !== \"\" && (\n        <label className=\"label\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <input\n        type={type}\n        placeholder={placeholder}\n        className={`input input-bordered placeholder-gray-500 bg-gray-300 text-deus-gray font-bold ${width} ${className}`}\n        value={value}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n    </>\n  )\n}\n\nexport default TextInput\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { okaidia } from \"react-syntax-highlighter/dist/esm/styles/prism\"\n\ninterface PrettyPrintProps {\n  data: any\n  style?: object\n}\n\nconst PrettyPrint = ({ data, style = {} }: PrettyPrintProps): JSX.Element => {\n  if (!data) return <></>\n\n  return (\n    <SyntaxHighlighter\n      customStyle={{ ...style }}\n      language=\"json\"\n      style={okaidia}\n    >\n      {JSON.stringify(data, null, 2)}\n    </SyntaxHighlighter>\n  )\n}\n\nexport default PrettyPrint\n","interface InputProps {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  className?: string\n  label?: string\n  checked: boolean\n}\n\nconst Checkbox = ({\n  onChange = () => {},\n  className = \"\",\n  label = \"\",\n  checked = false,\n}: InputProps): JSX.Element => {\n  return (\n    <div className=\"flex items-center bg-gray-700 p-2 rounded-lg bg-opacity-40 px-3\">\n      {label !== \"\" && (\n        <label className=\"label mr-3\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <input\n        type=\"checkbox\"\n        className={`checkbox border-deus-text ${className}`}\n        onChange={onChange}\n        checked={checked}\n      />\n    </div>\n  )\n}\n\nexport default Checkbox\n","import { useWallet } from \"src/services/wallet\"\n\ninterface ButtonProps {\n  onClick: () => void\n  className?: string\n  loading?: boolean\n  text: string\n  width?: string\n  textSize?: string\n}\n\nconst Button = ({\n  onClick,\n  className = \"\",\n  loading = false,\n  text,\n  width = \"w-3/6\",\n  textSize = \"text-lg\"\n}: ButtonProps): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div\n      data-tip=\"Connect wallet to continue\"\n      className={`${!wallet.initialized ? \"tooltip\" : \"\"} ${width}`}\n    >\n      <button\n        onClick={onClick}\n        className={`btn ${\n          loading ? \"loading\" : \"\"\n        } capitalize ${className} w-full ${textSize}`}\n        disabled={!wallet.initialized}\n        style={{ color: \"white\" }}\n      >\n        {!loading && text}\n      </button>\n    </div>\n  )\n}\n\nexport default Button\n","interface TransactionHashProps {\n  txHash: string\n}\n\nconst TransactionHash = ({ txHash }: TransactionHashProps): JSX.Element => {\n  if (txHash === \"\") return <></>\n\n  return (\n    <div className=\"flex p-3 bg-deus-pink text-white bg-gradient-to-r from-deus-pink to-deus-purple rounded-lg font-bold\">\n      <div>Transaction hash: </div>\n      <div className=\"ml-2\">{txHash}</div>\n    </div>\n  )\n}\n\nexport default TransactionHash\n","import React, { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport TextInput from \"src/components/TextInput\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport Checkbox from \"src/components/Checkbox\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst Instantiate = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys\n\n  const [input, setInput] = useState<string>(\"\")\n  const [codeId, setCodeId] = useState<string>(\"\")\n  const [mutable, setMutable] = useState<boolean>(false)\n  const [admins, setAdmins] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [contractAddress, setContractAddress] = useState<string>(\"\")\n\n  const inputOnKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (input === \"\") return\n    if (e.key === \"Enter\") {\n      if (!!admins.find((admin) => admin === input)) return\n      setAdmins([...admins, input])\n      setInput(\"\")\n    }\n  }\n\n  const codeIdOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCodeId(e.target.value)\n  }\n\n  const instantiateOnClick = () => {\n    if (admins.length === 0) {\n      errorToast(\"Enter admin addresses to continue.\")\n      return\n    }\n    if (!contract) return\n\n    setLoading(true)\n\n    contract\n      .instantiate({\n        codeId: codeId !== \"\" ? parseInt(codeId) : 200,\n        initMsg: { admins, mutable },\n        label: \"cw1-subkeys-contract\",\n      })\n      .then((data) => {\n        setLoading(false)\n        setContractAddress(data.contractAddress)\n        setTxHash(data.transactionHash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <SectionLayout>\n      <div className=\"form-control items-center\">\n        <TextInput\n          placeholder=\"Admin address\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={inputOnKeyPress}\n          label=\"Press enter after entering admin address\"\n          className=\"mb-3\"\n        />\n        {admins.length !== 0 && (\n          <PrettyPrint data={admins} style={{ width: \"70%\" }} />\n        )}\n        <div className=\"my-3\">\n          <Checkbox\n            checked={mutable}\n            onChange={() => setMutable(!mutable)}\n            label=\"Are admins mutable?\"\n          />\n        </div>\n        <TextInput\n          type=\"number\"\n          placeholder=\"Code ID (default is 200)\"\n          value={codeId}\n          onChange={codeIdOnChange}\n          label=\"Enter Code ID for the contract\"\n        />\n        <br />\n        <Button\n          onClick={instantiateOnClick}\n          className=\"btn-primary\"\n          text=\"Instantiate\"\n          loading={loading}\n        />\n        <br />\n        {contractAddress && (\n          <div className=\"flex p-3 bg-deus-pink text-white bg-gradient-to-r from-deus-pink to-deus-purple rounded-lg font-bold mb-2\">\n            <div>Contract address: </div>\n            <div className=\"ml-2\">{contractAddress}</div>\n          </div>\n        )}\n        <TransactionHash txHash={txHash} />\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Instantiate\n","import { useEffect, useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport { AllowanceInfo, SendMsg } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst SendTokens = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [addressToSend, setAddressToSend] = useState<string>(\"\")\n  const [amountToSend, setAmountToSend] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n  const [allowance, setAllowance] = useState<AllowanceInfo>()\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (addressToSend === \"\") return errorToast(\"Enter an address to send.\")\n\n    const amount = convertToNativeCoin(amountToSend, wallet.network)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: SendMsg = {\n      bank: {\n        send: {\n          from_address: contract.contractAddress,\n          to_address: addressToSend,\n          amount: [amount],\n        },\n      },\n    }\n\n    setLoading(true)\n\n    contract\n      .execute(wallet.address, [message])\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  useEffect(() => {\n    if (!wallet.initialized || !contract || addressToSend.length != 43)\n      setAllowance(undefined)\n    else\n      contract\n        .allowance(addressToSend)\n        .then((data) => setAllowance(data))\n        .catch(() => setAllowance(undefined))\n  }, [wallet.initialized, contract])\n\n  return (\n    <div className=\"form-control items-center\">\n      <div className=\"h-14\">\n        {wallet.initialized && (\n          <div className=\"text-center\">\n            <div className=\"text-lg\">\n              Wallet balance:{\" \"}\n              {wallet.balance[0].amount + wallet.balance[0].denom}\n            </div>\n            {allowance && (\n              <div className=\"text-lg\">\n                Allowance:{\" \"}\n                {allowance && allowance.balance.length\n                  ? allowance.balance[0].amount + allowance.balance[0].denom\n                  : \"0\"}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className=\"flex flex-row mt-4 mx-auto w-3/5 justify-start\">\n        <TextInput\n          placeholder=\"Address\"\n          value={addressToSend}\n          onChange={(e) => setAddressToSend(e.target.value)}\n          label=\"Address to send\"\n          className=\"mb-4 ml-1\"\n          width=\"w-7/12\"\n        />\n        {wallet.initialized && (\n          <Button\n            onClick={() => setAddressToSend(wallet.address)}\n            text=\"my wallet\"\n            className=\"btn-primary ml-4\"\n            width=\"w-1/6\"\n            textSize=\"text-xs\"\n          />\n        )}\n      </div>\n      <TextInput\n        type=\"number\"\n        placeholder=\"ujuno amount\"\n        value={amountToSend}\n        onChange={(e) => setAmountToSend(e.target.value)}\n        label=\"Amount to send\"\n        className=\"mb-4 ml-1\"\n        width=\"w-7/12\"\n      />\n      {wallet.initialized && allowance && allowance.balance.length > 0 && (\n        <Button\n          onClick={() => setAmountToSend(allowance.balance[0].amount)}\n          text=\"max\"\n          className=\"btn-primary ml-4\"\n          width=\"w-1/6\"\n          textSize=\"text-xs\"\n        />\n      )}\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default SendTokens\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport TextInput from \"src/components/TextInput\"\nimport Dropdown from \"src/components/Dropdown\"\nimport { Expiration } from \"src/contracts/cw1-subkeys\"\n\nconst DROPDOWN_OPTIONS = [\"Never\", \"At height\", \"At time\"]\n\nconst IncreaseAllowance = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [allowanceAddress, setAllowanceAddress] = useState<string>(\"\")\n  const [allowanceAmount, setAllowanceAmount] = useState<string>(\"\")\n  const [expiration, setExpiration] = useState<string>(\"never\")\n  const [expirationValue, setExpirationValue] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (allowanceAddress === \"\") return errorToast(\"Enter an address to send.\")\n    if (expiration !== \"never\" && expirationValue === \"\")\n      return errorToast(\"Enter an expiration time.\")\n\n    let expirationTime: Expiration = {\n      never: {},\n    }\n    if (expiration === \"at-height\" && !isNaN(Number(expirationValue))) {\n      expirationTime = { at_height: Number(expirationValue) }\n    }\n    if (expiration === \"at-time\" && !isNaN(Number(expirationValue))) {\n      expirationTime = { at_time: expirationValue }\n    }\n\n    const amount = convertToNativeCoin(allowanceAmount, wallet.network)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    setLoading(true)\n\n    contract\n      .increaseAllowance(\n        wallet.address,\n        allowanceAddress,\n        amount,\n        expirationTime\n      )\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to increase allowance\"\n        value={allowanceAddress}\n        onChange={(e) => setAllowanceAddress(e.target.value)}\n        placeholder=\"Address\"\n      />\n      <TextInput\n        type=\"number\"\n        label=\"Amount to increase\"\n        value={allowanceAmount}\n        onChange={(e) => setAllowanceAmount(e.target.value)}\n        placeholder=\"ujuno amount\"\n      />\n      <br />\n      <div className=\"flex items-center w-5/6 my-3\">\n        <Dropdown\n          label=\"Select expiration time\"\n          onChange={(e) => {\n            setExpirationValue(\"\")\n            setExpiration(e.target.value)\n          }}\n          value={expiration}\n          options={DROPDOWN_OPTIONS}\n        />\n        {(expiration === \"at-height\" || expiration === \"at-time\") && (\n          <TextInput\n            type=\"number\"\n            placeholder={expiration === \"at-height\" ? \"Block height\" : \"Time\"}\n            value={expirationValue}\n            onChange={(e) => setExpirationValue(e.target.value)}\n            width=\"w-44\"\n          />\n        )}\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default IncreaseAllowance\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport TextInput from \"src/components/TextInput\"\nimport Dropdown from \"src/components/Dropdown\"\nimport { Expiration } from \"src/contracts/cw1-subkeys\"\n\nconst DROPDOWN_OPTIONS = [\"Never\", \"At height\", \"At time\"]\n\nconst DecreaseAllowance = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [allowanceAddress, setAllowanceAddress] = useState<string>(\"\")\n  const [allowanceAmount, setAllowanceAmount] = useState<string>(\"\")\n  const [expiration, setExpiration] = useState<string>(\"never\")\n  const [expirationValue, setExpirationValue] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (allowanceAddress === \"\") return errorToast(\"Enter an address to send.\")\n    if (expiration !== \"never\" && expirationValue === \"\")\n      return errorToast(\"Enter an expiration time.\")\n\n    let expirationTime: Expiration = {\n      never: {},\n    }\n    if (expiration === \"at-height\" && !isNaN(Number(expirationValue))) {\n      expirationTime = { at_height: Number(expirationValue) }\n    }\n    if (expiration === \"at-time\" && !isNaN(Number(expirationValue))) {\n      expirationTime = { at_time: expirationValue }\n    }\n\n    const amount = convertToNativeCoin(allowanceAmount, wallet.network)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    setLoading(true)\n\n    contract\n      .decreaseAllowance(\n        wallet.address,\n        allowanceAddress,\n        amount,\n        expirationTime\n      )\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to decrease allowance\"\n        value={allowanceAddress}\n        onChange={(e) => setAllowanceAddress(e.target.value)}\n        placeholder=\"Address\"\n      />\n      <TextInput\n        type=\"number\"\n        label=\"Amount to decrease\"\n        value={allowanceAmount}\n        onChange={(e) => setAllowanceAmount(e.target.value)}\n        placeholder=\"ujuno amount\"\n      />\n      <br />\n      <div className=\"flex items-center w-5/6 my-3\">\n        <Dropdown\n          label=\"Select expiration time\"\n          onChange={(e) => {\n            setExpirationValue(\"\")\n            setExpiration(e.target.value)\n          }}\n          value={expiration}\n          options={DROPDOWN_OPTIONS}\n        />\n        {(expiration === \"at-height\" || expiration === \"at-time\") && (\n          <TextInput\n            type=\"number\"\n            placeholder={expiration === \"at-height\" ? \"Block height\" : \"Time\"}\n            value={expirationValue}\n            onChange={(e) => setExpirationValue(e.target.value)}\n            width=\"w-44\"\n          />\n        )}\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default DecreaseAllowance\n","import React, { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\n\nconst UpdateAdmins = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [input, setInput] = useState<string>(\"\")\n  const [admins, setAdmins] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [txHash, setTxHash] = useState<string>(\"\")\n\n  const inputOnKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (input === \"\") return\n    if (e.key === \"Enter\") {\n      if (!!admins.find((admin) => admin === input)) return\n      setAdmins([...admins, input])\n      setInput(\"\")\n    }\n  }\n\n  const execute = () => {\n    if (admins.length === 0) {\n      errorToast(\"Fill required fields\")\n      return\n    }\n    if (!contract) return\n\n    setLoading(true)\n\n    contract\n      .updateAdmins(wallet.address, admins)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Admin address\"\n        onKeyPress={inputOnKeyPress}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        label=\"Press enter after entering admin address\"\n        className=\"mb-3\"\n      />\n      {admins.length !== 0 && (\n        <PrettyPrint data={admins} style={{ width: \"70%\" }} />\n      )}\n      <br />\n      <Button\n        className=\"btn-primary\"\n        onClick={execute}\n        text=\"Execute\"\n        loading={loading}\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default UpdateAdmins\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport { useWallet } from \"src/services/wallet\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst FreezeAdmins = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n\n    contract\n      .freeze(wallet.address)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <div className=\"text-deus-red font-bold text-xl w-3/6 text-center my-5\">\n        This is an irreversible action. <br /> You will not be able to update\n        the admins after this executing this message.\n      </div>\n      <Button\n        className=\"btn-primary mt-3\"\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default FreezeAdmins\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport { Permissions } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Checkbox from \"src/components/Checkbox\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst SetPermissions = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [address, setAddress] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n  const [permissions, setPermissions] = useState<Permissions>({\n    delegate: false,\n    undelegate: false,\n    redelegate: false,\n    withdraw: false,\n  })\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (address === \"\") return errorToast(\"Enter an address to send.\")\n\n    setLoading(true)\n\n    contract\n      .setPermissions(wallet.address, address, permissions)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to set permissions\"\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <br />\n      <div className=\"flex items-center w-4/6 justify-between\">\n        <Checkbox\n          checked={permissions.delegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              delegate: !permissions.delegate,\n            })\n          }\n          label=\"Delegate\"\n        />\n        <Checkbox\n          checked={permissions.undelegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              undelegate: !permissions.undelegate,\n            })\n          }\n          label=\"Undelegate\"\n        />\n        <Checkbox\n          checked={permissions.redelegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              redelegate: !permissions.redelegate,\n            })\n          }\n          label=\"Redelegate\"\n        />\n        <Checkbox\n          checked={permissions.withdraw}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              withdraw: !permissions.withdraw,\n            })\n          }\n          label=\"Withdraw\"\n        />\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        className=\"btn-primary\"\n        text=\"Execute\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default SetPermissions\n","import { useEffect, useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport TextInput from \"./TextInput\"\n\nconst ContractAddress = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys\n  const [contractAddress, setContractAddress] = useState<string>(\"\")\n\n  useEffect(() => {\n    if (localStorage.getItem(\"contract_address\"))\n      setContractAddress(localStorage.getItem(\"contract_address\") || \"\")\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"contract_address\", contractAddress)\n    contract?.updateContractAddress(contractAddress)\n  }, [contractAddress, contract])\n\n  return (\n    <div className=\"flex justify-center mt-2\">\n      <div className=\"flex justify-center text-lg font-bold items-center\">\n        <span className=\"text-deus-text\">Contract address:</span>\n      </div>\n      <TextInput\n        placeholder=\"Enter contract address\"\n        className=\"ml-2 w-4/6 text-center px-3\"\n        value={contractAddress}\n        onChange={(e) => setContractAddress(e.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default ContractAddress\n","import { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport SendTokens from \"./SendTokens\"\nimport IncreaseAllowance from \"./IncreaseAllowance\"\nimport DecreaseAllowace from \"./DecreaseAllowace\"\nimport UpdateAdmins from \"./UpdateAdmins\"\nimport FreezeAdmins from \"./FreezeAdmins\"\nimport SetPermissions from \"./SetPermissions\"\nimport ContractAddress from \"src/components/ContractAddress\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Send tokens\",\n  \"Increase Allowance\",\n  \"Decrease Allowance\",\n  \"Update Admins\",\n  \"Freeze Admins\",\n  \"Set Permissions\",\n]\n\nconst Execute = (): JSX.Element => {\n  const [option, setOption] = useState<string>(\"send-tokens\")\n\n  return (\n    <SectionLayout>\n      <ContractAddress />\n      <br />\n      <Dropdown\n        onChange={(e) => setOption(e.target.value)}\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        label=\"Select execute operation\"\n      />\n      <div className=\"pt-4\">\n        {option === \"send-tokens\" && <SendTokens />}\n        {option === \"increase-allowance\" && <IncreaseAllowance />}\n        {option === \"decrease-allowance\" && <DecreaseAllowace />}\n        {option === \"update-admins\" && <UpdateAdmins />}\n        {option === \"freeze-admins\" && <FreezeAdmins />}\n        {option === \"set-permissions\" && <SetPermissions />}\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Execute\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { AllowanceInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\n\nconst AllAllowances = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<readonly AllowanceInfo[]>()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      .allAllowances()\n      .then((data) => {\n        setLoading(false)\n        setData(data.allowances)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport Button from \"src/components/Button\"\n\nconst Admins = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [admins, setAdmins] = useState<readonly string[]>()\n  // const [isMutable, setIsMutable] = useState<boolean>(false)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      ?.admins()\n      .then((data) => {\n        setLoading(false)\n        setAdmins(data.admins)\n        // setIsMutable(data.mutable)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={admins} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default Admins\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { AllowanceInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\nimport TextInput from \"src/components/TextInput\"\n\nconst AllAllowances = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<AllowanceInfo>()\n  const [address, setAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (address === \"\") return errorToast(\"Enter an adress.\")\n\n    setLoading(true)\n    contract\n      ?.allowance(address)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        label=\"Address to check allowance\"\n      />\n      <br />\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { PermissionsInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\n\nconst AllPermissions = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<readonly PermissionsInfo[]>()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      ?.allPermissions()\n      .then((data) => {\n        setLoading(false)\n        setData(data.permissions)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllPermissions\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { PermissionsInfo } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\n\nconst AllPermissions = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<PermissionsInfo>()\n  const [address, setAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (address === \"\") return errorToast(\"Enter an adress.\")\n\n    setLoading(true)\n    contract\n      ?.permissions(address)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        label=\"Address to check permission\"\n      />\n      <br />\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllPermissions\n","import { useState } from \"react\"\nimport {\n  useContracts,\n  // WithdrawMsg,\n} from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport { useWallet } from \"src/services/wallet\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport {\n  CanExecuteResponse,\n  SendMsg,\n  DelegateMsg,\n  UndelegateMsg,\n  RedelegateMsg,\n} from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Send\",\n  \"Delegate\",\n  \"Undelegate\",\n  \"Redelegate\",\n  // 'Withdraw'\n]\n\nconst AllAllowances = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [option, setOption] = useState<string>(\"send\")\n  const [data, setData] = useState<CanExecuteResponse>()\n  const [addressToSend, setAddressToSend] = useState<string>(\"\")\n  const [amountToSend, setAmountToSend] = useState<string>(\"\")\n  const [srcValidatorAddress, setSrcValidatorAddress] = useState<string>(\"\")\n  const [dstValidatorAddress, setDstValidatorAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    switch (option) {\n      case \"send\":\n        return checkSendMsg()\n      case \"delegate\":\n        return checkDelegateMsg()\n      case \"undelegate\":\n        return checkUndelegateMsg()\n      case \"redelegate\":\n        return checkRedelegateMsg()\n    }\n  }\n\n  const checkSendMsg = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (addressToSend === \"\") return errorToast(\"Enter an adress.\")\n\n    const amount = convertToNativeCoin(amountToSend, wallet.network)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: SendMsg = {\n      bank: {\n        send: {\n          from_address: contract.contractAddress,\n          to_address: addressToSend,\n          amount: [amount],\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkDelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter an adress.\")\n\n    const amount = convertToNativeCoin(amountToSend, wallet.network)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: DelegateMsg = {\n      staking: {\n        delegate: {\n          validator: srcValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkUndelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter an adress.\")\n    if (amountToSend === \"\") return errorToast(\"Enter an amount.\")\n\n    const amount = convertToNativeCoin(amountToSend, wallet.network)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: UndelegateMsg = {\n      staking: {\n        undelegate: {\n          validator: srcValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkRedelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter a source adress.\")\n    if (dstValidatorAddress === \"\")\n      return errorToast(\"Enter a destination adress.\")\n\n    const amount = convertToNativeCoin(amountToSend, wallet.network)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: RedelegateMsg = {\n      staking: {\n        redelegate: {\n          src_validator: srcValidatorAddress,\n          dst_validator: dstValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Dropdown\n        onChange={(e) => {\n          setAmountToSend(\"\")\n          setOption(e.target.value)\n        }}\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        label=\"Select execute message to check\"\n        className=\"mb-3\"\n      />\n      {option === \"send\" && (\n        <TextInput\n          value={addressToSend}\n          onChange={(e) => setAddressToSend(e.target.value)}\n          placeholder=\"Address\"\n          label=\"Address to send\"\n        />\n      )}\n      {(option === \"delegate\" || option === \"undelegate\") && (\n        <TextInput\n          value={srcValidatorAddress}\n          onChange={(e) => setSrcValidatorAddress(e.target.value)}\n          placeholder={`${option === \"delegate\" ? \"Validator\" : \"Source validator\"\n            } address`}\n          label={`Validator address to ${option}`}\n        />\n      )}\n      {option === \"redelegate\" && (\n        <TextInput\n          value={dstValidatorAddress}\n          onChange={(e) => setDstValidatorAddress(e.target.value)}\n          placeholder=\"Destination validator address\"\n          label=\"Validator address to redelegate\"\n        />\n      )}\n      <TextInput\n        type=\"number\"\n        value={amountToSend}\n        onChange={(e) => setAmountToSend(e.target.value)}\n        placeholder=\"ujuno amount\"\n        label={`Amount to ${option}`}\n      />\n      <br />\n      <Button\n        className=\"btn-primary\"\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport AllAllowances from \"./AllAllowances\"\nimport Admins from \"./Admins\"\nimport Allowances from \"./Allowances\"\nimport AllPermissions from \"./AllPermissions\"\nimport Permissions from \"./Permissions\"\nimport CanExecute from \"./CanExecute\"\nimport ContractAddress from \"src/components/ContractAddress\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Admins\",\n  \"All allowances\",\n  \"Allowance\",\n  \"All permissions\",\n  \"Permission\",\n  \"Can execute\",\n]\n\nconst Query = (): JSX.Element => {\n  const [option, setOption] = useState<string>(\"admins\")\n\n  return (\n    <SectionLayout>\n      <ContractAddress />\n      <br />\n      <Dropdown\n        label=\"Select query\"\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        onChange={(e) => setOption(e.target.value)}\n      />\n      <div className=\"pt-4\">\n        {option === \"admins\" && <Admins />}\n        {option === \"all-allowances\" && <AllAllowances />}\n        {option === \"allowance\" && <Allowances />}\n        {option === \"all-permissions\" && <AllPermissions />}\n        {option === \"permission\" && <Permissions />}\n        {option === \"can-execute\" && <CanExecute />}\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Query\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport { ToastContainer } from \"react-toastify\"\nimport { WalletProvider } from \"./services/wallet\"\nimport { ContractsProvider } from \"./contracts\"\nimport PageLayout from \"./layout/Page\"\nimport {\n  contractPath,\n  executePath,\n  instantiatePath,\n  queryPath /* contractPath */,\n} from \"./routes\"\n// import { ProtectedSwitch } from \"./routes/ProtectedSwitch\"\nimport Welcome from \"./pages/Welcome\"\n// import Contract from \"./pages/Contract\"\nimport Instantiate from \"./pages/Instantiate\"\nimport Execute from \"./pages/Execute\"\nimport Query from \"./pages/Query\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { useState } from \"react\"\nimport { formatRoute } from \"./utils\"\n\nconst App = (): JSX.Element => {\n  const [network, setNetwork] = useState<string>(\"juno-mainnet\")\n\n  return (\n    <WalletProvider network={network} setNetwork={setNetwork}>\n      <ContractsProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <PageLayout>\n            <Switch>\n              <Route\n                exact\n                path={`/${network}/${formatRoute(contractPath)}`}\n                component={Welcome}\n              />\n              <Route\n                exact\n                path={`/${network}/${instantiatePath}`}\n                component={Instantiate}\n              />\n              <Route\n                exact\n                path={`/${network}/${executePath}`}\n                component={Execute}\n              />\n              <Route\n                exact\n                path={`/${network}/${queryPath}`}\n                component={Query}\n              />\n              {/* <ProtectedSwitch>\n                <Route exact path={`/${contractPath}`} component={Contract} />\n                <Route\n                  exact\n                  path={`/${instantiatePath}`}\n                  component={Instantiate}\n                />\n                <Route exact path={`/${executePath}`} component={Execute} />\n                <Route exact path={`/${queryPath}`} component={Query} />\n              </ProtectedSwitch> */}\n            </Switch>\n          </PageLayout>\n        </Router>\n        <ToastContainer theme=\"dark\" />\n      </ContractsProvider>\n    </WalletProvider>\n  )\n}\n\nexport default App\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}