{"version":3,"sources":["config.ts","utils/currency.ts","utils/toast.ts","routes/index.ts","services/keplr.ts","services/wallet.tsx","contracts/cw1-subkeys/contract.ts","contracts/index.tsx","contracts/cw1-subkeys/useContract.ts","components/Navbar.tsx","components/Dropdown.tsx","components/Sidebar.tsx","layout/Page.tsx","pages/Welcome.tsx","components/WalletAddress.tsx","layout/Section.tsx","components/TextInput.tsx","components/PrettyPrint.tsx","components/Checkbox.tsx","components/Button.tsx","components/TransactionHash.tsx","pages/Instantiate.tsx","pages/Execute/SendTokens.tsx","pages/Execute/IncreaseAllowance.tsx","pages/Execute/DecreaseAllowace.tsx","pages/Execute/UpdateAdmins.tsx","pages/Execute/FreezeAdmins.tsx","pages/Execute/SetPermissions.tsx","components/ContractAddress.tsx","pages/Execute/index.tsx","pages/Query/AllAllowances.tsx","pages/Query/Admins.tsx","pages/Query/Allowances.tsx","pages/Query/AllPermissions.tsx","pages/Query/Permissions.tsx","pages/Query/CanExecute.tsx","pages/Query/index.tsx","App.tsx","index.tsx"],"names":["config","chainId","chainName","addressPrefix","rpcUrl","httpUrl","faucetUrl","feeToken","stakingToken","coinMap","ujunox","denom","fractionalDigits","gasPrice","fees","upload","init","exec","keplrConfig","rpc","rest","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","bip44","coinType","convertToNativeCoin","amount","isNaN","Number","coin","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","autoClose","style","width","errorToast","message","Toast","error","instantiatePath","executePath","queryPath","createClient","signer","a","SigningCosmWasmClient","connectWithSigner","throwNotInitialized","Error","defaultContext","initialized","clear","address","balance","refreshBalance","getClient","getSigner","CosmWasmContext","React","useWallet","WalletProvider","children","useState","setSigner","client","setClient","contextWithInit","value","setValue","length","getBalance","push","useEffect","console","log","getAccounts","localStorage","setItem","bind","Provider","CW1","options","use","contractAddress","allowance","queryContractSmart","spender","allAllowances","startAfter","limit","all_allowances","start_after","permissions","allPermissions","all_permissions","canExecute","sender","msg","can_execute","admins","admin_list","freeze","senderAddress","fee","calculateFee","execute","result","transactionHash","updateAdmins","update_admins","msgs","increaseAllowance","expires","increase_allowance","decreaseAllowance","decrease_allowance","setPermissions","set_permissions","instantiate","codeId","initMsg","label","cw1Subkeys","ContractsContext","createContext","useContracts","useContext","ContractsProvider","wallet","getItem","setAddress","setCW1","contractConfig","GasPrice","fromString","cw1Contract","CW1Init","getCW1Instance","useCallback","Promise","resolve","reject","then","catch","updateContractAddress","useCW1Contract","Navbar","className","htmlFor","size","Dropdown","onChange","map","option","idx","toLowerCase","split","join","Sidebar","content","network","setNetwork","keplr","history","useHistory","initializing","setInitializing","connect","loadKeplrWallet","anyWindow","window","getOfflineSigner","enable","experimentalSuggestChain","getOfflineSignerAuto","signAmino","sign","err","replace","disconnect","useKeplr","location","useLocation","id","type","to","backgroundColor","pathname","e","target","href","rel","src","alt","onClick","PageLayout","Welcome","WalletAddress","Section","TextInput","placeholder","onKeyPress","PrettyPrint","data","customStyle","language","okaidia","JSON","stringify","Checkbox","checked","Button","loading","text","data-tip","disabled","color","TransactionHash","txHash","Instantiate","contract","input","setInput","setCodeId","mutable","setMutable","setAdmins","setLoading","setTxHash","setContractAddress","key","find","admin","parseInt","SendTokens","addressToSend","setAddressToSend","amountToSend","setAmountToSend","bank","send","from_address","to_address","hash","DROPDOWN_OPTIONS","IncreaseAllowance","allowanceAddress","setAllowanceAddress","allowanceAmount","setAllowanceAmount","expiration","setExpiration","expirationValue","setExpirationValue","expirationTime","never","at_height","at_time","DecreaseAllowance","UpdateAdmins","FreezeAdmins","SetPermissions","delegate","undelegate","redelegate","withdraw","ContractAddress","Execute","setOption","DecreaseAllowace","AllAllowances","setData","allowances","Admins","AllPermissions","srcValidatorAddress","setSrcValidatorAddress","dstValidatorAddress","setDstValidatorAddress","checkSendMsg","checkDelegateMsg","staking","validator","checkUndelegateMsg","checkRedelegateMsg","src_validator","dst_validator","Query","Allowances","Permissions","CanExecute","App","basename","process","Page","exact","path","component","theme","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5523766c.chunk.js","sourcesContent":["import { CoinMap } from \"./utils\"\n\nexport interface AppConfig {\n  readonly chainId: string\n  readonly chainName: string\n  readonly addressPrefix: string\n  readonly rpcUrl: string\n  readonly httpUrl: string\n  readonly faucetUrl: string\n  readonly feeToken: string\n  readonly stakingToken: string\n  readonly coinMap: CoinMap\n  readonly gasPrice: number\n  readonly fees: FeeOptions\n  readonly codeId?: number\n}\n\nexport interface FeeOptions {\n  upload: number\n  exec: number\n  init: number\n}\n\nexport interface KeplrCoin {\n  readonly coinDenom: string\n  readonly coinMinimalDenom: string\n  readonly coinDecimals: number\n}\n\nexport interface KeplrConfig {\n  readonly chainId: string\n  readonly chainName: string\n  readonly rpc: string\n  readonly rest: string\n  readonly bech32Config: {\n    readonly bech32PrefixAccAddr: string\n    readonly bech32PrefixAccPub: string\n    readonly bech32PrefixValAddr: string\n    readonly bech32PrefixValPub: string\n    readonly bech32PrefixConsAddr: string\n    readonly bech32PrefixConsPub: string\n  }\n  readonly currencies: readonly KeplrCoin[]\n  readonly feeCurrencies: readonly KeplrCoin[]\n  readonly stakeCurrency: KeplrCoin\n  readonly gasPriceStep: {\n    readonly low: number\n    readonly average: number\n    readonly high: number\n  }\n  readonly bip44: { readonly coinType: number }\n  readonly coinType: number\n}\n\nexport const config: AppConfig = {\n  chainId: \"uni\",\n  chainName: \"Uni\",\n  addressPrefix: \"juno\",\n  rpcUrl: \"https://rpc.uni.juno.deuslabs.fi\",\n  httpUrl: \"https://lcd.uni.juno.deuslabs.fi\",\n  faucetUrl: \"https://faucet.uni.juno.deuslabs.fi\",\n  feeToken: \"ujunox\",\n  stakingToken: \"ujunox\",\n  coinMap: {\n    ujunox: { denom: \"JUNOX\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n  fees: {\n    upload: 1500000,\n    init: 500000,\n    exec: 200000,\n  },\n}\n\nexport const keplrConfig: KeplrConfig = {\n  chainId: config.chainId,\n  chainName: config.chainName,\n  rpc: config.rpcUrl,\n  rest: config.httpUrl,\n  bech32Config: {\n    bech32PrefixAccAddr: `${config.addressPrefix}`,\n    bech32PrefixAccPub: `${config.addressPrefix}pub`,\n    bech32PrefixValAddr: `${config.addressPrefix}valoper`,\n    bech32PrefixValPub: `${config.addressPrefix}valoperpub`,\n    bech32PrefixConsAddr: `${config.addressPrefix}valcons`,\n    bech32PrefixConsPub: `${config.addressPrefix}valconspub`,\n  },\n  currencies: [\n    {\n      coinDenom: config.coinMap[config.feeToken].denom,\n      coinMinimalDenom: config.feeToken,\n      coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n    },\n    {\n      coinDenom: config.coinMap[config.stakingToken].denom,\n      coinMinimalDenom: config.stakingToken,\n      coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n    },\n  ],\n  feeCurrencies: [\n    {\n      coinDenom: config.coinMap[config.feeToken].denom,\n      coinMinimalDenom: config.feeToken,\n      coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n    },\n  ],\n  stakeCurrency: {\n    coinDenom: config.coinMap[config.stakingToken].denom,\n    coinMinimalDenom: config.stakingToken,\n    coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n  },\n  gasPriceStep: {\n    low: config.gasPrice / 2,\n    average: config.gasPrice,\n    high: config.gasPrice * 2,\n  },\n  bip44: { coinType: 118 },\n  coinType: 118,\n}\n","import { coin } from \"@cosmjs/proto-signing\"\nimport { config } from \"src/config\"\n\nexport interface MappedCoin {\n  readonly denom: string\n  readonly fractionalDigits: number\n}\n\nexport interface CoinMap {\n  readonly [key: string]: MappedCoin\n}\n\nexport function convertToNativeCoin(amount: string) {\n  if (amount === \"\" || isNaN(Number(amount))) return null\n\n  return coin(Number(amount) * 1000000, config.feeToken)\n}\n","import { toast as Toast, ToastOptions } from \"react-toastify\"\n\nconst config: ToastOptions = {\n  hideProgressBar: true,\n  closeOnClick: false,\n  pauseOnHover: false,\n  draggable: false,\n  progress: undefined,\n  position: \"top-left\",\n  autoClose: false,\n  style: { width: \"fit-content\" },\n}\n\nexport function infoToast(message: string) {\n  Toast.info(message, {\n    ...config,\n  })\n}\n\nexport function warnToast(message: string) {\n  Toast.warn(message, {\n    ...config,\n  })\n}\n\nexport function successToast(message: string) {\n  Toast.success(message, {\n    ...config,\n  })\n}\n\nexport function errorToast(message: string) {\n  Toast.error(message, {\n    ...config,\n  })\n}\n\nexport function promiseToast(\n  callback: any,\n  pendingMessage: string,\n  successMessage: string,\n  errorMessage: string\n) {\n  Toast.promise(\n    callback,\n    {\n      pending: pendingMessage,\n      success: successMessage,\n      error: errorMessage,\n    },\n    { ...config }\n  )\n}\n","export const instantiatePath = \"instantiate\"\nexport const executePath = \"execute\"\nexport const queryPath = \"query\"\nexport const contractPath = \"contract\"\n","import { useCallback, useEffect, useState } from \"react\"\nimport { OfflineSigner } from \"@cosmjs/proto-signing\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { config, keplrConfig } from \"src/config\"\nimport { useWallet } from \"./wallet\"\nimport { errorToast } from \"src/utils\"\nimport { instantiatePath } from \"src/routes\"\nimport { useHistory } from \"react-router\"\n\nexport async function createClient(\n  signer: OfflineSigner\n): Promise<SigningCosmWasmClient> {\n  return SigningCosmWasmClient.connectWithSigner(config.rpcUrl, signer)\n}\n\nexport function useKeplr(network: string) {\n  const { clear, init, initialized } = useWallet()\n  const history = useHistory()\n  const [initializing, setInitializing] = useState(false)\n\n  const disconnect = () => {\n    localStorage.clear()\n    clear()\n  }\n\n  const connect = useCallback(() => {\n    const loadKeplrWallet = async (): Promise<OfflineSigner> => {\n      const anyWindow: any = window\n      if (!anyWindow.getOfflineSigner) {\n        setInitializing(false)\n        throw new Error(\"Keplr extension is not available\")\n      }\n\n      await anyWindow.keplr.enable(config.chainId)\n      await anyWindow.keplr.experimentalSuggestChain(keplrConfig)\n\n      const signer = anyWindow.getOfflineSignerAuto(config.chainId)\n      signer.signAmino = signer.signAmino ?? signer.sign\n\n      return Promise.resolve(signer)\n    }\n\n    setInitializing(true)\n\n    loadKeplrWallet()\n      .then((signer) => {\n        init(signer)\n      })\n      .catch((err) => {\n        setInitializing(false)\n        errorToast(err.message)\n      })\n  }, [init])\n\n  useEffect(() => {\n    const item = localStorage.getItem(\"wallet_address\")\n\n    if (item) connect()\n  }, [initialized, connect])\n\n  useEffect(() => {\n    if (!initialized) return\n\n    history.replace(`/${network}/${instantiatePath}`)\n\n    setInitializing(false)\n  }, [initialized, history, network])\n\n  return {\n    connect,\n    disconnect,\n    initializing,\n  }\n}\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { config } from \"../config\"\nimport { createClient } from \"./keplr\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { Coin } from \"@cosmjs/stargate\"\nimport { OfflineSigner } from \"@cosmjs/proto-signing\"\n\ninterface CosmWasmContextType {\n  readonly initialized: boolean\n  readonly init: (signer: OfflineSigner) => void\n  readonly clear: () => void\n  readonly address: string\n  readonly balance: readonly Coin[]\n  readonly refreshBalance: () => Promise<void>\n  readonly getClient: () => SigningCosmWasmClient\n  readonly getSigner: () => OfflineSigner\n}\n\nfunction throwNotInitialized(): any {\n  throw new Error(\"Not yet initialized\")\n}\n\nconst defaultContext: CosmWasmContextType = {\n  initialized: false,\n  init: throwNotInitialized,\n  clear: throwNotInitialized,\n  address: \"\",\n  balance: [],\n  refreshBalance: throwNotInitialized,\n  getClient: throwNotInitialized,\n  getSigner: throwNotInitialized,\n}\n\nexport const CosmWasmContext =\n  React.createContext<CosmWasmContextType>(defaultContext)\n\nexport const useWallet = (): CosmWasmContextType =>\n  React.useContext(CosmWasmContext)\n\nexport function WalletProvider({ children }: any): JSX.Element {\n  const [signer, setSigner] = useState<OfflineSigner>()\n  const [client, setClient] = useState<SigningCosmWasmClient>()\n\n  const contextWithInit = { ...defaultContext, init: setSigner }\n  const [value, setValue] = useState<CosmWasmContextType>(contextWithInit)\n\n  const clear = (): void => {\n    setValue({ ...contextWithInit })\n    setClient(undefined)\n    setSigner(undefined)\n  }\n\n  // Get balance for each coin specified in config.coinMap\n  async function refreshBalance(\n    address: string,\n    balance: Coin[]\n  ): Promise<void> {\n    if (!client) return\n\n    balance.length = 0\n    for (const denom in config.coinMap) {\n      const coin = await client.getBalance(address, denom)\n      if (coin) balance.push(coin)\n    }\n\n    setValue({ ...value, balance })\n  }\n\n  useEffect(() => {\n    if (!signer) return\n    ;(async function updateClient(): Promise<void> {\n      try {\n        const client = await createClient(signer)\n        setClient(client)\n      } catch (error) {\n        console.log(error)\n      }\n    })()\n  }, [signer])\n\n  useEffect(() => {\n    if (!signer || !client) return\n\n    const balance: Coin[] = []\n\n    ;(async function updateValue(): Promise<void> {\n      const address = (await signer.getAccounts())[0].address\n\n      await refreshBalance(address, balance)\n\n      localStorage.setItem(\"wallet_address\", address)\n\n      setValue({\n        initialized: true,\n        init: () => {},\n        clear,\n        address,\n        balance,\n        refreshBalance: refreshBalance.bind(null, address, balance),\n        getClient: () => client,\n        getSigner: () => signer,\n      })\n    })()\n  }, [client])\n\n  return (\n    <CosmWasmContext.Provider value={value}>\n      {children}\n    </CosmWasmContext.Provider>\n  )\n}\n","import { Coin } from \"@cosmjs/proto-signing\"\nimport { calculateFee } from \"@cosmjs/stargate\"\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\"\nimport { FeeOptions } from \"src/config\"\nimport { GasPrice } from \"@cosmjs/stargate\"\n\ninterface ExecuteFeeOptions {\n  fees: FeeOptions\n  gasPrice: GasPrice\n}\n\nexport interface InstantiateResponse {\n  readonly contractAddress: string\n  readonly transactionHash: string\n}\n\nexport type Expiration =\n  | { at_height: number }\n  | { at_time: string }\n  | { never: {} }\n\nexport interface CanExecuteResponse {\n  readonly can_execute: boolean\n}\n\nexport interface Permissions {\n  readonly delegate: boolean\n  readonly undelegate: boolean\n  readonly redelegate: boolean\n  readonly withdraw: boolean\n}\n\nexport interface PermissionsInfo {\n  readonly spender: string\n  readonly permissions: Permissions\n}\n\ninterface AllPermissionsResponse {\n  readonly permissions: readonly PermissionsInfo[]\n}\n\nexport interface AllowanceInfo {\n  readonly balance: readonly Coin[]\n  readonly expires: Expiration\n  readonly spender?: string\n}\n\nexport interface AllAllowancesResponse {\n  readonly allowances: readonly AllowanceInfo[]\n}\n\ninterface AdminListResponse {\n  readonly admins: readonly string[]\n  readonly mutable: boolean\n}\n\ntype CosmosMsg =\n  | SendMsg\n  | DelegateMsg\n  | UndelegateMsg\n  | RedelegateMsg\n  | WithdrawMsg\n\nexport interface SendMsg {\n  readonly bank: {\n    readonly send: {\n      readonly from_address: string\n      readonly to_address: string\n      readonly amount: readonly Coin[]\n    }\n  }\n}\n\nexport interface DelegateMsg {\n  readonly staking: {\n    readonly delegate: {\n      readonly validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface UndelegateMsg {\n  readonly staking: {\n    readonly undelegate: {\n      readonly validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface RedelegateMsg {\n  readonly staking: {\n    readonly redelegate: {\n      readonly src_validator: string\n      readonly dst_validator: string\n      readonly amount: Coin\n    }\n  }\n}\n\nexport interface WithdrawMsg {\n  readonly staking: {\n    readonly withdraw: {\n      readonly validator: string\n      readonly recipient?: string\n    }\n  }\n}\n\nexport interface CW1Instance {\n  readonly contractAddress: string\n\n  // queries\n  admins: () => Promise<AdminListResponse>\n\n  allowance: (address?: string) => Promise<AllowanceInfo>\n\n  allAllowances: (\n    startAfter?: string,\n    limit?: number\n  ) => Promise<AllAllowancesResponse>\n\n  permissions: (address?: string) => Promise<PermissionsInfo>\n\n  allPermissions: (\n    startAfter?: string,\n    limit?: number\n  ) => Promise<AllPermissionsResponse>\n  canExecute: (sender: string, msg: CosmosMsg) => Promise<CanExecuteResponse>\n\n  // actions\n  execute: (\n    senderAddress: string,\n    msgs: readonly CosmosMsg[]\n  ) => Promise<string>\n\n  freeze: (senderAddress: string) => Promise<string>\n\n  updateAdmins: (\n    senderAddress: string,\n    admins: readonly string[]\n  ) => Promise<string>\n\n  increaseAllowance: (\n    senderAddress: string,\n    recipient: string,\n    amount: Coin,\n    expires?: Expiration\n  ) => Promise<string>\n\n  decreaseAllowance: (\n    senderAddress: string,\n    recipient: string,\n    amount: Coin,\n    expires?: Expiration\n  ) => Promise<string>\n\n  setPermissions: (\n    senderAddress: string,\n    recipient: string,\n    permissions: Permissions\n  ) => Promise<string>\n}\n\nexport interface CW1Contract {\n  instantiate: (\n    senderAddress: string,\n    codeId: number,\n    initMsg: Record<string, unknown>,\n    label: string\n    // admin?: string\n  ) => Promise<InstantiateResponse>\n\n  use: (contractAddress: string) => CW1Instance\n}\n\nexport const CW1 = (\n  client: SigningCosmWasmClient,\n  options: ExecuteFeeOptions\n): CW1Contract => {\n  const use = (contractAddress: string): CW1Instance => {\n    const allowance = async (address?: string): Promise<AllowanceInfo> => {\n      return await client.queryContractSmart(contractAddress, {\n        allowance: { spender: address },\n      })\n    }\n\n    const allAllowances = async (\n      startAfter?: string,\n      limit?: number\n    ): Promise<AllAllowancesResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        all_allowances: { start_after: startAfter, limit: limit },\n      })\n    }\n\n    const permissions = async (address?: string): Promise<PermissionsInfo> => {\n      return await client.queryContractSmart(contractAddress, {\n        permissions: { spender: address },\n      })\n    }\n\n    const allPermissions = async (\n      startAfter?: string,\n      limit?: number\n    ): Promise<AllPermissionsResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        all_permissions: { start_after: startAfter, limit: limit },\n      })\n    }\n\n    const canExecute = async (\n      sender: string,\n      msg: CosmosMsg\n    ): Promise<CanExecuteResponse> => {\n      return client.queryContractSmart(contractAddress, {\n        can_execute: { sender: sender, msg: msg },\n      })\n    }\n\n    const admins = async (): Promise<AdminListResponse> => {\n      return client.queryContractSmart(contractAddress, { admin_list: {} })\n    }\n\n    const freeze = async (senderAddress: string): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { freeze: {} },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const updateAdmins = async (\n      senderAddress: string,\n      admins: readonly string[]\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { update_admins: { admins } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const execute = async (\n      senderAddress: string,\n      msgs: readonly CosmosMsg[]\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { execute: { msgs } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const increaseAllowance = async (\n      senderAddress: string,\n      spender: string,\n      amount: Coin,\n      expires?: Expiration\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { increase_allowance: { spender, amount, expires } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const decreaseAllowance = async (\n      senderAddress: string,\n      spender: string,\n      amount: Coin,\n      expires?: Expiration\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { decrease_allowance: { spender, amount, expires } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    const setPermissions = async (\n      senderAddress: string,\n      spender: string,\n      permissions: Permissions\n    ): Promise<string> => {\n      const fee = calculateFee(options.fees.exec, options.gasPrice)\n\n      const result = await client.execute(\n        senderAddress,\n        contractAddress,\n        { set_permissions: { spender, permissions } },\n        fee\n      )\n      return result.transactionHash\n    }\n\n    return {\n      contractAddress,\n      admins,\n      allowance,\n      allAllowances,\n      permissions,\n      allPermissions,\n      canExecute,\n      execute,\n      freeze,\n      updateAdmins,\n      increaseAllowance,\n      decreaseAllowance,\n      setPermissions,\n    }\n  }\n\n  const instantiate = async (\n    senderAddress: string,\n    codeId: number,\n    initMsg: Record<string, unknown>,\n    label: string\n    // admin?: string\n  ): Promise<InstantiateResponse> => {\n    const fee = calculateFee(options.fees.init, options.gasPrice)\n\n    const result = await client.instantiate(\n      senderAddress,\n      codeId,\n      initMsg,\n      label,\n      fee\n    )\n    return {\n      contractAddress: result.contractAddress,\n      transactionHash: result.transactionHash,\n    }\n  }\n\n  return { use, instantiate }\n}\n","import React from \"react\"\nimport { UseCW1ContractProps, useCW1Contract } from \"./cw1-subkeys\"\n\ninterface ContractsContextType {\n  cw1Subkeys: UseCW1ContractProps | null\n}\n\nconst defaultContext: ContractsContextType = {\n  cw1Subkeys: null,\n}\n\nconst ContractsContext =\n  React.createContext<ContractsContextType>(defaultContext)\n\nexport const useContracts = (): ContractsContextType =>\n  React.useContext(ContractsContext)\n\nexport function ContractsProvider({\n  children,\n}: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const cw1Subkeys = useCW1Contract()\n\n  const value: ContractsContextType = { cw1Subkeys }\n\n  return (\n    <ContractsContext.Provider value={value}>\n      {children}\n    </ContractsContext.Provider>\n  )\n}\n","import { GasPrice } from \"@cosmjs/stargate\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { config } from \"src/config\"\nimport { useWallet } from \"src/services/wallet\"\nimport { InstantiateResponse } from \".\"\nimport { CW1Contract, CW1Instance, CW1 as CW1Init } from \"./contract\"\ninterface InstantiateProps {\n  codeId: number\n  initMsg: Record<string, unknown>\n  label: string\n}\n\nexport interface UseCW1ContractProps {\n  instantiate: ({\n    codeId,\n    initMsg,\n    label,\n  }: InstantiateProps) => Promise<InstantiateResponse>\n  use: () => CW1Instance | undefined\n  updateContractAddress: (contractAddress: string) => void\n}\n\nexport function useCW1Contract(): UseCW1ContractProps {\n  const wallet = useWallet()\n\n  const [address, setAddress] = useState<string>(\n    localStorage.getItem(\"contract_address\") || \"\"\n  )\n  const [CW1, setCW1] = useState<CW1Contract>()\n\n  useEffect(() => {\n    if (wallet.initialized) {\n      const getCW1Instance = async (): Promise<void> => {\n        const contractConfig = {\n          fees: config.fees,\n          gasPrice: GasPrice.fromString(`${config.gasPrice}${config.feeToken}`),\n        }\n\n        const cw1Contract = CW1Init(wallet.getClient(), contractConfig)\n        setCW1(cw1Contract)\n      }\n\n      getCW1Instance()\n    }\n  }, [wallet])\n\n  const updateContractAddress = (contractAddress: string) => {\n    setAddress(contractAddress)\n  }\n\n  const instantiate = useCallback(\n    ({\n      codeId,\n      initMsg,\n      label,\n    }: InstantiateProps): Promise<InstantiateResponse> => {\n      return new Promise((resolve, reject) => {\n        if (!CW1) return reject(\"Contract is not initialized.\")\n        CW1.instantiate(wallet.address, codeId, initMsg, label)\n          .then(resolve)\n          .catch(reject)\n      })\n    },\n    [CW1, wallet]\n  )\n\n  const use = useCallback((): CW1Instance | undefined => {\n    return CW1?.use(address)\n  }, [CW1, address])\n\n  return {\n    instantiate,\n    use,\n    updateContractAddress,\n  }\n}\n","import { FaHamburger } from \"react-icons/fa\"\n\nconst Navbar = (): JSX.Element => {\n  return (\n    <div className=\"p-4 items-center bg-deus-dark text-neutral-content flex justify-end lg:hidden\">\n      <label htmlFor=\"sidebar\">\n        <FaHamburger size={24} className=\"cursor-pointer text-deus-red\" />\n      </label>\n    </div>\n  )\n}\n\nexport default Navbar\n","interface DropdownProps {\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void\n  value: string\n  options: string[]\n  label?: string\n  className?: string\n  width?: string\n}\n\nconst Dropdown = ({\n  onChange,\n  value,\n  options,\n  label = \"\",\n  className = \"\",\n  width = \"w-full\",\n}: DropdownProps): JSX.Element => {\n  return (\n    <div className=\"flex items-center w-full justify-center\">\n      {label !== \"\" && (\n        <label className=\"label mr-3\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <select\n        className={`select select-bordered max-w-xs bg-gray-300 text-deus-gray ${width} ${className}`}\n        onChange={onChange}\n        value={value}\n      >\n        {options.map((option, idx) => {\n          return (\n            <option value={option.toLowerCase().split(\" \").join(\"-\")} key={idx}>\n              {option}\n            </option>\n          )\n        })}\n      </select>\n    </div>\n  )\n}\n\nexport default Dropdown\n","import { useCallback } from \"react\"\nimport {\n  instantiatePath,\n  executePath,\n  queryPath,\n  // contractPath,\n} from \"src/routes\"\nimport { useKeplr } from \"src/services/keplr\"\nimport { useWallet } from \"src/services/wallet\"\nimport { Link } from \"react-router-dom\"\nimport Navbar from \"./Navbar\"\nimport { FaPlay, FaMicrochip, FaSearch /* FaBook */ } from \"react-icons/fa\"\nimport { useLocation } from \"react-router-dom\"\nimport Dropdown from \"./Dropdown\"\ninterface SidebarProps {\n  content: JSX.Element\n  network: string\n  setNetwork: (network: string) => void\n}\n\nconst Sidebar = ({\n  content,\n  network,\n  setNetwork,\n}: SidebarProps): JSX.Element => {\n  const { initialized } = useWallet()\n  const keplr = useKeplr(network)\n  const location = useLocation()\n\n  const disconnect = () => {\n    keplr.disconnect()\n  }\n\n  const connect = useCallback(() => {\n    keplr.connect()\n  }, [keplr])\n\n  const buttonOnClick = () => {\n    if (initialized) disconnect()\n    else connect()\n  }\n\n  return (\n    <div className=\"shadow bg-deus-dark drawer drawer-mobile h-full w-screen\">\n      <input id=\"sidebar\" type=\"checkbox\" className=\"drawer-toggle\" />\n      <div className=\"flex flex-col drawer-content\">\n        <Navbar />\n        {content}\n      </div>\n      <div className=\"drawer-side\">\n        <label htmlFor=\"sidebar\" className=\"drawer-overlay\"></label>\n        <ul className=\"menu p-4 overflow-y-auto w-80 bg-deus-gray text-deus-text\">\n          {/* <li>\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${contractPath}`}\n            >\n              <FaBook className=\"mr-4\" />\n              {contractPath}\n            </Link>\n          </li> */}\n          <li className=\"mb-2\">\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${network}/${instantiatePath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${instantiatePath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaMicrochip className=\"mr-4\" />\n              {instantiatePath}\n            </Link>\n          </li>\n          <li className=\"mb-2\">\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${network}/${executePath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${executePath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaPlay className=\"mr-4\" />\n              {executePath}\n            </Link>\n          </li>\n          <li>\n            <Link\n              className=\"capitalize font-bold text-xl\"\n              to={`/${network}/${queryPath}`}\n              style={{\n                backgroundColor:\n                  location.pathname === `/${queryPath}`\n                    ? \"#6715FF\"\n                    : \"transparent\",\n              }}\n            >\n              <FaSearch className=\"mr-4\" />\n              {queryPath}\n            </Link>\n          </li>\n          <li className=\"h-full justify-end pb-4\">\n            <Dropdown\n              value={network}\n              onChange={(e) => {\n                setNetwork(e.target.value)\n              }}\n              options={[\"Juno\"]}\n              label=\"Select network\"\n              width=\"w-40\"\n              className=\"mb-3\"\n            />\n            <a\n              href=\"https://deuslabs.fi\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex justify-center\"\n              style={{ backgroundColor: \"transparent\" }}\n            >\n              <div className=\"text-l font-bold\">Made by </div>\n              <img src=\"./deus-logo.png\" alt=\"deus labs\" className=\"h-10\" />\n            </a>\n            <a\n              href=\"https://cosmwasm.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex justify-center mb-2\"\n              style={{ backgroundColor: \"transparent\" }}\n            >\n              <div className=\"text-l font-bold mr-2\">Powered by </div>\n              <img src=\"./cosmwasm-logo.svg\" alt=\"cosmwasm\" className=\"h-8\" />\n            </a>\n            <div className=\"mb-3 flex items-center justify-center text-l font-bold\">\n              Made with{\" \"}\n              <img\n                src=\"./nyan-love.png\"\n                alt=\"love\"\n                className=\"h-10 ml-1 animate-bounce\"\n              />\n            </div>\n            <button\n              onClick={buttonOnClick}\n              className={`btn bg-gradient-to-r from-deus-pink to-deus-purple\n                hover:opacity-80 mx-5 capitalize text-xl ${\n                  keplr.initializing ? \"loading\" : \"\"\n                }`}\n            >\n              {keplr.initializing\n                ? \"\"\n                : `${initialized ? \"Disconnect\" : \"Connect\"} Wallet`}\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import Sidebar from \"src/components/Sidebar\"\n\nconst PageLayout = ({ children, network, setNetwork }: any): JSX.Element => {\n  return (\n    <div className=\"flex flex-col max-h-screen h-screen bg-deus-dark\">\n      <div className=\"flex-grow\">\n        <Sidebar content={children} network={network} setNetwork={setNetwork} />\n      </div>\n    </div>\n  )\n}\n\nexport default PageLayout\n","import { FaArrowLeft } from \"react-icons/fa\"\n\nconst Welcome = (): JSX.Element => {\n  return (\n    <div className=\"p-6 bg-deus-black flex flex-col justify-end text-deus-text flex-1\">\n      <div className=\"\">\n        <div className=\"text-5xl font-bold mb-5\">CW1 Subkeys</div>\n        <p className=\"mb-3\">\n          CW1 Subkeys is initially proposed in Cosmos forum in Jun 2019 to be\n          added to the Cosmos Hub as a module. You can check out from this{\" \"}\n          <a\n            href=\"https://forum.cosmos.network/t/proposal-adding-subkey-feature-to-cosmos-sdk-and-apply-it-to-the-hub/2358/15\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"underline text-blue-400 font-bold\"\n          >\n            link.\n          </a>\n        </p>\n        <p>\n          Since then it’s still not yet added to the Hub but thanks to CosmWasm\n          and the ability to write smart contracts on Cosmos blockchains, this\n          feature is here now.\n        </p>\n        <div className=\"text-3xl font-bold my-3\">\n          How it works? <br />\n        </div>\n        <div className=\"text-lg\">\n          <div>\n            - Contract is instantiated with a given list of admins and a\n            variable for making the list mutable/immutable. <br />\n          </div>\n          <div>\n            - Admins can update the admin list if needed.\n            <br />\n          </div>\n          <div>\n            - Admins can freeze the admin list, making it immutable forever.\n            <br />\n          </div>\n          <div>\n            - Admins increase/decrease allowance for any wallet they add.\n            <br />\n          </div>\n          <div>\n            - Admins can set permissions to wallets for relaying different\n            messages. This is limited to 4 for now. (delegate, undelegate,\n            redelegate, withdraw)\n            <br />\n          </div>\n          <div>\n            - Wallet owners can relay send messages to get tokens that are\n            allocated to them with allowance feature.\n            <br />\n          </div>\n        </div>\n        <div className=\"text-3xl font-bold my-3\">\n          Use cases <br />\n        </div>\n        <div className=\"text-lg\">\n          <div>\n            - People can use this contract to utilize as a single shared account\n            between themselves. They can lock up tokens and get them based on\n            their allowance. <br />\n          </div>\n          <div>\n            - This example can also be implemented in a bigger environment such\n            as a company. Different accounts and subkeys can be made to do\n            internal allocations. <br />\n          </div>\n          <div>\n            - In our use case we have a validator that is running and in order\n            to fairly distribute the rewards among the team, we setup a single\n            account that gets all the rewards and give allowance to the people\n            who'll get those. <br />\n          </div>\n        </div>\n      </div>\n      <div className=\"flex-1 my-10\"></div>\n      <div className=\"h-full flex-1 flex items-end\">\n        <div\n          className=\"p-3 h-36 border-2 border-deus-text mb-2 rounded-lg flex flex-col justify-between \"\n          style={{ width: \"fit-content\" }}\n        >\n          <div>\n            Connecting the wallet is only supported through the Keplr extension.{\" \"}\n            <br />\n            You might not be able to use your Ledger to sign transactions for\n            now. <br />\n            We are working on it!\n          </div>\n          <div className=\"flex item-center text-xl font-bold\">\n            <div className=\"flex items-center justify-center\">\n              <FaArrowLeft size={22} className=\"mr-3\" />\n            </div>\n            Connect your wallet to explore CW1 Subkeys\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Welcome\n","import { useWallet } from \"src/services/wallet\"\n\nconst WalletAddress = (): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div className=\"flex justify-center text-lg font-bold items-center bg-gray-800 rounded-lg p-2 px-5 text-deus-text\">\n      Your wallet address: {wallet.address}\n    </div>\n  )\n}\n\nexport default WalletAddress\n","import WalletAddress from \"src/components/WalletAddress\"\nimport { useWallet } from \"src/services/wallet\"\n\nconst Section = ({ children }: any): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div className=\"w-full h-full flex items-center justify-center overflow-hidden relative\">\n      <div className=\"text-deus-text h-5/6 w-5/6 p-10 bg-deus-gray rounded-xl overflow-auto\">\n        {children}\n      </div>\n      {wallet.initialized && (\n        <div className=\"absolute top-10\">\n          <WalletAddress />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Section\n","interface InputProps {\n  type?: string\n  placeholder: string\n  value: string\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  onKeyPress?: (e: React.KeyboardEvent<HTMLInputElement>) => void\n  className?: string\n  label?: string\n  width?: string\n}\n\nconst TextInput = ({\n  type = \"text\",\n  placeholder,\n  value,\n  onChange = () => {},\n  className = \"\",\n  onKeyPress = () => {},\n  label = \"\",\n  width = \"w-3/6\",\n}: InputProps): JSX.Element => {\n  return (\n    <>\n      {label !== \"\" && (\n        <label className=\"label\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <input\n        type={type}\n        placeholder={placeholder}\n        className={`input input-bordered placeholder-gray-500 bg-gray-300 text-deus-gray font-bold ${width} ${className}`}\n        value={value}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n    </>\n  )\n}\n\nexport default TextInput\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { okaidia } from \"react-syntax-highlighter/dist/esm/styles/prism\"\n\ninterface PrettyPrintProps {\n  data: any\n  style?: object\n}\n\nconst PrettyPrint = ({ data, style = {} }: PrettyPrintProps): JSX.Element => {\n  if (!data) return <></>\n\n  return (\n    <SyntaxHighlighter\n      customStyle={{ ...style }}\n      language=\"json\"\n      style={okaidia}\n    >\n      {JSON.stringify(data, null, 2)}\n    </SyntaxHighlighter>\n  )\n}\n\nexport default PrettyPrint\n","interface InputProps {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  className?: string\n  label?: string\n  checked: boolean\n}\n\nconst Checkbox = ({\n  onChange = () => {},\n  className = \"\",\n  label = \"\",\n  checked = false,\n}: InputProps): JSX.Element => {\n  return (\n    <div className=\"flex items-center bg-gray-700 p-2 rounded-lg bg-opacity-40 px-3\">\n      {label !== \"\" && (\n        <label className=\"label mr-3\">\n          <span className=\"label-text text-deus-text font-bold\">{label}</span>\n        </label>\n      )}\n      <input\n        type=\"checkbox\"\n        className={`checkbox border-deus-text ${className}`}\n        onChange={onChange}\n        checked={checked}\n      />\n    </div>\n  )\n}\n\nexport default Checkbox\n","import { useWallet } from \"src/services/wallet\"\n\ninterface ButtonProps {\n  onClick: () => void\n  className?: string\n  loading?: boolean\n  text: string\n}\n\nconst Button = ({\n  onClick,\n  className = \"\",\n  loading = false,\n  text,\n}: ButtonProps): JSX.Element => {\n  const wallet = useWallet()\n\n  return (\n    <div\n      data-tip=\"Connect wallet to continue\"\n      className={`${!wallet.initialized ? \"tooltip\" : \"\"} w-3/6`}\n    >\n      <button\n        onClick={onClick}\n        className={`btn ${\n          loading ? \"loading\" : \"\"\n        } capitalize ${className} w-full text-lg`}\n        disabled={!wallet.initialized}\n        style={{ color: \"white\" }}\n      >\n        {!loading && text}\n      </button>\n    </div>\n  )\n}\n\nexport default Button\n","interface TransactionHashProps {\n  txHash: string\n}\n\nconst TransactionHash = ({ txHash }: TransactionHashProps): JSX.Element => {\n  if (txHash === \"\") return <></>\n\n  return (\n    <div className=\"flex p-3 bg-deus-pink text-white bg-gradient-to-r from-deus-pink to-deus-purple rounded-lg font-bold\">\n      <div>Transaction hash: </div>\n      <div className=\"ml-2\">{txHash}</div>\n    </div>\n  )\n}\n\nexport default TransactionHash\n","import React, { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport TextInput from \"src/components/TextInput\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport Checkbox from \"src/components/Checkbox\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst Instantiate = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys\n\n  const [input, setInput] = useState<string>(\"\")\n  const [codeId, setCodeId] = useState<string>(\"\")\n  const [mutable, setMutable] = useState<boolean>(false)\n  const [admins, setAdmins] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [contractAddress, setContractAddress] = useState<string>(\"\")\n\n  const inputOnKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (input === \"\") return\n    if (e.key === \"Enter\") {\n      if (!!admins.find((admin) => admin === input)) return\n      setAdmins([...admins, input])\n      setInput(\"\")\n    }\n  }\n\n  const codeIdOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCodeId(e.target.value)\n  }\n\n  const instantiateOnClick = () => {\n    if (admins.length === 0) {\n      errorToast(\"Enter admin addresses to continue.\")\n      return\n    }\n    if (!contract) return\n\n    setLoading(true)\n\n    contract\n      .instantiate({\n        codeId: codeId !== \"\" ? parseInt(codeId) : 200,\n        initMsg: { admins, mutable },\n        label: \"cw1-subkeys-contract\",\n      })\n      .then((data) => {\n        setLoading(false)\n        setContractAddress(data.contractAddress)\n        setTxHash(data.transactionHash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <SectionLayout>\n      <div className=\"form-control items-center\">\n        <TextInput\n          placeholder=\"Admin address\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={inputOnKeyPress}\n          label=\"Press enter after entering admin address\"\n          className=\"mb-3\"\n        />\n        {admins.length !== 0 && (\n          <PrettyPrint data={admins} style={{ width: \"70%\" }} />\n        )}\n        <div className=\"my-3\">\n          <Checkbox\n            checked={mutable}\n            onChange={() => setMutable(!mutable)}\n            label=\"Are admins mutable?\"\n          />\n        </div>\n        <TextInput\n          type=\"number\"\n          placeholder=\"Code ID (default is 200)\"\n          value={codeId}\n          onChange={codeIdOnChange}\n          label=\"Enter Code ID for the contract\"\n        />\n        <br />\n        <Button\n          onClick={instantiateOnClick}\n          className=\"btn-primary\"\n          text=\"Instantiate\"\n          loading={loading}\n        />\n        <br />\n        {contractAddress && (\n          <div className=\"flex p-3 bg-deus-pink text-white bg-gradient-to-r from-deus-pink to-deus-purple rounded-lg font-bold mb-2\">\n            <div>Contract address: </div>\n            <div className=\"ml-2\">{contractAddress}</div>\n          </div>\n        )}\n        <TransactionHash txHash={txHash} />\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Instantiate\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport { SendMsg } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst SendTokens = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [addressToSend, setAddressToSend] = useState<string>(\"\")\n  const [amountToSend, setAmountToSend] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (addressToSend === \"\") return errorToast(\"Enter an address to send.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: SendMsg = {\n      bank: {\n        send: {\n          from_address: contract.contractAddress,\n          to_address: addressToSend,\n          amount: [amount],\n        },\n      },\n    }\n\n    setLoading(true)\n\n    contract\n      .execute(wallet.address, [message])\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Address\"\n        value={addressToSend}\n        onChange={(e) => setAddressToSend(e.target.value)}\n        label=\"Address to send\"\n        className=\"mb-4\"\n      />\n      <TextInput\n        type=\"number\"\n        placeholder=\"Juno amount\"\n        value={amountToSend}\n        onChange={(e) => setAmountToSend(e.target.value)}\n        label=\"Amount to send\"\n        className=\"mb-4\"\n      />\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default SendTokens\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport TextInput from \"src/components/TextInput\"\nimport Dropdown from \"src/components/Dropdown\"\nimport { Expiration } from \"src/contracts/cw1-subkeys\"\n\nconst DROPDOWN_OPTIONS = [\"Never\", \"At height\", \"At time\"]\n\nconst IncreaseAllowance = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [allowanceAddress, setAllowanceAddress] = useState<string>(\"\")\n  const [allowanceAmount, setAllowanceAmount] = useState<string>(\"\")\n  const [expiration, setExpiration] = useState<string>(\"never\")\n  const [expirationValue, setExpirationValue] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (allowanceAddress === \"\") return errorToast(\"Enter an address to send.\")\n    if (expiration !== \"never\" && expirationValue === \"\")\n      return errorToast(\"Enter an expiration time.\")\n\n    let expirationTime: Expiration = {\n      never: {},\n    }\n    if (expiration === \"at-height\" && !isNaN(Number(expirationValue))) {\n      expirationTime = { at_height: Number(expirationValue) }\n    }\n    if (expiration === \"at-time\" && !isNaN(Number(expirationValue))) {\n      expirationTime = { at_time: expirationValue }\n    }\n\n    const amount = convertToNativeCoin(allowanceAmount)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    setLoading(true)\n    console.log(expirationTime)\n    contract\n      .increaseAllowance(\n        wallet.address,\n        allowanceAddress,\n        amount,\n        expirationTime\n      )\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to increase allowance\"\n        value={allowanceAddress}\n        onChange={(e) => setAllowanceAddress(e.target.value)}\n        placeholder=\"Address\"\n      />\n      <TextInput\n        type=\"number\"\n        label=\"Amount to increase\"\n        value={allowanceAmount}\n        onChange={(e) => setAllowanceAmount(e.target.value)}\n        placeholder=\"Juno amount\"\n      />\n      <br />\n      <div className=\"flex items-center w-5/6 my-3\">\n        <Dropdown\n          label=\"Select expiration time\"\n          onChange={(e) => {\n            setExpirationValue(\"\")\n            setExpiration(e.target.value)\n          }}\n          value={expiration}\n          options={DROPDOWN_OPTIONS}\n        />\n        {(expiration === \"at-height\" || expiration === \"at-time\") && (\n          <TextInput\n            type=\"number\"\n            placeholder={expiration === \"at-height\" ? \"Block height\" : \"Time\"}\n            value={expirationValue}\n            onChange={(e) => setExpirationValue(e.target.value)}\n            width=\"w-44\"\n          />\n        )}\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default IncreaseAllowance\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport TextInput from \"src/components/TextInput\"\nimport Dropdown from \"src/components/Dropdown\"\nimport { Expiration } from \"src/contracts/cw1-subkeys\"\n\nconst DROPDOWN_OPTIONS = [\"Never\", \"At height\", \"At time\"]\n\nconst DecreaseAllowance = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [allowanceAddress, setAllowanceAddress] = useState<string>(\"\")\n  const [allowanceAmount, setAllowanceAmount] = useState<string>(\"\")\n  const [expiration, setExpiration] = useState<string>(\"never\")\n  const [expirationValue, setExpirationValue] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (allowanceAddress === \"\") return errorToast(\"Enter an address to send.\")\n    if (expiration !== \"never\" && expirationValue === \"\")\n      return errorToast(\"Enter an expiration time.\")\n\n    let expirationTime: Expiration = {\n      never: {},\n    }\n    if (expiration === \"at-height\" && !isNaN(Number(expirationValue))) {\n      expirationTime = { at_height: Number(expirationValue) }\n    }\n    if (expiration === \"at-time\" && !isNaN(Number(expirationValue))) {\n      expirationTime = { at_time: expirationValue }\n    }\n\n    const amount = convertToNativeCoin(allowanceAmount)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    setLoading(true)\n\n    contract\n      .decreaseAllowance(\n        wallet.address,\n        allowanceAddress,\n        amount,\n        expirationTime\n      )\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to decrease allowance\"\n        value={allowanceAddress}\n        onChange={(e) => setAllowanceAddress(e.target.value)}\n        placeholder=\"Address\"\n      />\n      <TextInput\n        type=\"number\"\n        label=\"Amount to decrease\"\n        value={allowanceAmount}\n        onChange={(e) => setAllowanceAmount(e.target.value)}\n        placeholder=\"Juno amount\"\n      />\n      <br />\n      <div className=\"flex items-center w-5/6 my-3\">\n        <Dropdown\n          label=\"Select expiration time\"\n          onChange={(e) => {\n            setExpirationValue(\"\")\n            setExpiration(e.target.value)\n          }}\n          value={expiration}\n          options={DROPDOWN_OPTIONS}\n        />\n        {(expiration === \"at-height\" || expiration === \"at-time\") && (\n          <TextInput\n            type=\"number\"\n            placeholder={expiration === \"at-height\" ? \"Block height\" : \"Time\"}\n            value={expirationValue}\n            onChange={(e) => setExpirationValue(e.target.value)}\n            width=\"w-44\"\n          />\n        )}\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default DecreaseAllowance\n","import React, { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\n\nconst UpdateAdmins = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [input, setInput] = useState<string>(\"\")\n  const [admins, setAdmins] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [txHash, setTxHash] = useState<string>(\"\")\n\n  const inputOnKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (input === \"\") return\n    if (e.key === \"Enter\") {\n      if (!!admins.find((admin) => admin === input)) return\n      setAdmins([...admins, input])\n      setInput(\"\")\n    }\n  }\n\n  const execute = () => {\n    if (admins.length === 0) {\n      errorToast(\"Fill required fields\")\n      return\n    }\n    if (!contract) return\n\n    setLoading(true)\n\n    contract\n      .updateAdmins(wallet.address, admins)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Admin address\"\n        onKeyPress={inputOnKeyPress}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        label=\"Press enter after entering admin address\"\n        className=\"mb-3\"\n      />\n      {admins.length !== 0 && (\n        <PrettyPrint data={admins} style={{ width: \"70%\" }} />\n      )}\n      <br />\n      <Button\n        className=\"btn-primary\"\n        onClick={execute}\n        text=\"Execute\"\n        loading={loading}\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default UpdateAdmins\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport { useWallet } from \"src/services/wallet\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst FreezeAdmins = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n\n    contract\n      .freeze(wallet.address)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <div className=\"text-deus-red font-bold text-xl w-3/6 text-center my-5\">\n        This is an irreversible action. <br /> You will not be able to update\n        the admins after this executing this message.\n      </div>\n      <Button\n        className=\"btn-primary mt-3\"\n        onClick={execute}\n        loading={loading}\n        text=\"Execute\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default FreezeAdmins\n","import { useState } from \"react\"\nimport { useWallet } from \"src/services/wallet\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport { Permissions } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Checkbox from \"src/components/Checkbox\"\nimport Button from \"src/components/Button\"\nimport TransactionHash from \"src/components/TransactionHash\"\n\nconst SetPermissions = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [address, setAddress] = useState<string>(\"\")\n  const [txHash, setTxHash] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n  const [permissions, setPermissions] = useState<Permissions>({\n    delegate: false,\n    undelegate: false,\n    redelegate: false,\n    withdraw: false,\n  })\n\n  const execute = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (address === \"\") return errorToast(\"Enter an address to send.\")\n\n    setLoading(true)\n\n    contract\n      .setPermissions(wallet.address, address, permissions)\n      .then((hash) => {\n        setLoading(false)\n        setTxHash(hash)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        label=\"Address to set permissions\"\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <br />\n      <div className=\"flex items-center w-4/6 justify-between\">\n        <Checkbox\n          checked={permissions.delegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              delegate: !permissions.delegate,\n            })\n          }\n          label=\"Delegate\"\n        />\n        <Checkbox\n          checked={permissions.undelegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              undelegate: !permissions.undelegate,\n            })\n          }\n          label=\"Undelegate\"\n        />\n        <Checkbox\n          checked={permissions.redelegate}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              redelegate: !permissions.redelegate,\n            })\n          }\n          label=\"Redelegate\"\n        />\n        <Checkbox\n          checked={permissions.withdraw}\n          onChange={() =>\n            setPermissions({\n              ...permissions,\n              withdraw: !permissions.withdraw,\n            })\n          }\n          label=\"Withdraw\"\n        />\n      </div>\n      <br />\n      <Button\n        onClick={execute}\n        loading={loading}\n        className=\"btn-primary\"\n        text=\"Execute\"\n      />\n      <br />\n      <TransactionHash txHash={txHash} />\n    </div>\n  )\n}\n\nexport default SetPermissions\n","import { useEffect, useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport TextInput from \"./TextInput\"\n\nconst ContractAddress = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys\n  const [contractAddress, setContractAddress] = useState<string>(\"\")\n\n  useEffect(() => {\n    if (localStorage.getItem(\"contract_address\"))\n      setContractAddress(localStorage.getItem(\"contract_address\") || \"\")\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"contract_address\", contractAddress)\n    contract?.updateContractAddress(contractAddress)\n  }, [contractAddress, contract])\n\n  return (\n    <div className=\"flex justify-center mt-2\">\n      <div className=\"flex justify-center text-lg font-bold items-center\">\n        <span className=\"text-deus-text\">Contract address:</span>\n      </div>\n      <TextInput\n        placeholder=\"Enter contract address\"\n        className=\"ml-2 w-4/6 text-center px-3\"\n        value={contractAddress}\n        onChange={(e) => setContractAddress(e.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default ContractAddress\n","import { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport SendTokens from \"./SendTokens\"\nimport IncreaseAllowance from \"./IncreaseAllowance\"\nimport DecreaseAllowace from \"./DecreaseAllowace\"\nimport UpdateAdmins from \"./UpdateAdmins\"\nimport FreezeAdmins from \"./FreezeAdmins\"\nimport SetPermissions from \"./SetPermissions\"\nimport ContractAddress from \"src/components/ContractAddress\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Send tokens\",\n  \"Increase Allowance\",\n  \"Decrease Allowance\",\n  \"Update Admins\",\n  \"Freeze Admins\",\n  \"Set Permissions\",\n]\n\nconst Execute = (): JSX.Element => {\n  const [option, setOption] = useState<string>(\"send-tokens\")\n\n  return (\n    <SectionLayout>\n      <ContractAddress />\n      <br />\n      <Dropdown\n        onChange={(e) => setOption(e.target.value)}\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        label=\"Select execute operation\"\n      />\n      <div className=\"pt-4\">\n        {option === \"send-tokens\" && <SendTokens />}\n        {option === \"increase-allowance\" && <IncreaseAllowance />}\n        {option === \"decrease-allowance\" && <DecreaseAllowace />}\n        {option === \"update-admins\" && <UpdateAdmins />}\n        {option === \"freeze-admins\" && <FreezeAdmins />}\n        {option === \"set-permissions\" && <SetPermissions />}\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Execute\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { AllowanceInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\n\nconst AllAllowances = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<readonly AllowanceInfo[]>()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      .allAllowances()\n      .then((data) => {\n        setLoading(false)\n        setData(data.allowances)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport Button from \"src/components/Button\"\n\nconst Admins = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [admins, setAdmins] = useState<readonly string[]>()\n  // const [isMutable, setIsMutable] = useState<boolean>(false)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      ?.admins()\n      .then((data) => {\n        setLoading(false)\n        setAdmins(data.admins)\n        // setIsMutable(data.mutable)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={admins} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default Admins\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { AllowanceInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\nimport TextInput from \"src/components/TextInput\"\n\nconst AllAllowances = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<AllowanceInfo>()\n  const [address, setAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (address === \"\") return errorToast(\"Enter an adress.\")\n\n    setLoading(true)\n    contract\n      ?.allowance(address)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        label=\"Address to check allowance\"\n      />\n      <br />\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { PermissionsInfo } from \"src/contracts/cw1-subkeys\"\nimport Button from \"src/components/Button\"\n\nconst AllPermissions = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<readonly PermissionsInfo[]>()\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n\n    setLoading(true)\n    contract\n      ?.allPermissions()\n      .then((data) => {\n        setLoading(false)\n        setData(data.permissions)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllPermissions\n","import { useState } from \"react\"\nimport { useContracts } from \"src/contracts\"\nimport { errorToast } from \"src/utils\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport { PermissionsInfo } from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\n\nconst AllPermissions = (): JSX.Element => {\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [data, setData] = useState<PermissionsInfo>()\n  const [address, setAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    if (address === \"\") return errorToast(\"Enter an adress.\")\n\n    setLoading(true)\n    contract\n      ?.permissions(address)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <TextInput\n        placeholder=\"Address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        label=\"Address to check permission\"\n      />\n      <br />\n      <Button\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n        className=\"btn-primary\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllPermissions\n","import { useState } from \"react\"\nimport {\n  useContracts,\n  // WithdrawMsg,\n} from \"src/contracts\"\nimport { convertToNativeCoin, errorToast } from \"src/utils\"\nimport { useWallet } from \"src/services/wallet\"\nimport PrettyPrint from \"src/components/PrettyPrint\"\nimport {\n  CanExecuteResponse,\n  SendMsg,\n  DelegateMsg,\n  UndelegateMsg,\n  RedelegateMsg,\n} from \"src/contracts/cw1-subkeys\"\nimport TextInput from \"src/components/TextInput\"\nimport Button from \"src/components/Button\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Send\",\n  \"Delegate\",\n  \"Undelegate\",\n  \"Redelegate\",\n  // 'Withdraw'\n]\n\nconst AllAllowances = (): JSX.Element => {\n  const wallet = useWallet()\n  const contract = useContracts().cw1Subkeys?.use()\n\n  const [option, setOption] = useState<string>(\"send\")\n  const [data, setData] = useState<CanExecuteResponse>()\n  const [addressToSend, setAddressToSend] = useState<string>(\"\")\n  const [amountToSend, setAmountToSend] = useState<string>(\"\")\n  const [srcValidatorAddress, setSrcValidatorAddress] = useState<string>(\"\")\n  const [dstValidatorAddress, setDstValidatorAddress] = useState<string>(\"\")\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const query = () => {\n    switch (option) {\n      case \"send\":\n        return checkSendMsg()\n      case \"delegate\":\n        return checkDelegateMsg()\n      case \"undelegate\":\n        return checkUndelegateMsg()\n      case \"redelegate\":\n        return checkRedelegateMsg()\n    }\n  }\n\n  const checkSendMsg = () => {\n    if (!contract) return errorToast(\"Contract is not initialized.\")\n    if (addressToSend === \"\") return errorToast(\"Enter an adress.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: SendMsg = {\n      bank: {\n        send: {\n          from_address: contract.contractAddress,\n          to_address: addressToSend,\n          amount: [amount],\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkDelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter an adress.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: DelegateMsg = {\n      staking: {\n        delegate: {\n          validator: srcValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkUndelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter an adress.\")\n    if (amountToSend === \"\") return errorToast(\"Enter an amount.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: UndelegateMsg = {\n      staking: {\n        undelegate: {\n          validator: srcValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  const checkRedelegateMsg = () => {\n    if (srcValidatorAddress === \"\") return errorToast(\"Enter a source adress.\")\n    if (dstValidatorAddress === \"\")\n      return errorToast(\"Enter a destination adress.\")\n\n    const amount = convertToNativeCoin(amountToSend)\n    if (!amount) return errorToast(\"Enter a valid amount.\")\n\n    const message: RedelegateMsg = {\n      staking: {\n        redelegate: {\n          src_validator: srcValidatorAddress,\n          dst_validator: dstValidatorAddress,\n          amount: amount,\n        },\n      },\n    }\n\n    setLoading(true)\n    contract\n      ?.canExecute(wallet.address, message)\n      .then((data) => {\n        setLoading(false)\n        setData(data)\n      })\n      .catch((err) => {\n        setLoading(false)\n        errorToast(err.message)\n      })\n  }\n\n  return (\n    <div className=\"form-control items-center\">\n      <Dropdown\n        onChange={(e) => {\n          setAmountToSend(\"\")\n          setOption(e.target.value)\n        }}\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        label=\"Select execute message to check\"\n        className=\"mb-3\"\n      />\n      {option === \"send\" && (\n        <TextInput\n          value={addressToSend}\n          onChange={(e) => setAddressToSend(e.target.value)}\n          placeholder=\"Address\"\n          label=\"Address to send\"\n        />\n      )}\n      {(option === \"delegate\" || option === \"undelegate\") && (\n        <TextInput\n          value={srcValidatorAddress}\n          onChange={(e) => setSrcValidatorAddress(e.target.value)}\n          placeholder={`${\n            option === \"delegate\" ? \"Validator\" : \"Source validator\"\n          } address`}\n          label={`Validator address to ${option}`}\n        />\n      )}\n      {option === \"redelegate\" && (\n        <TextInput\n          value={dstValidatorAddress}\n          onChange={(e) => setDstValidatorAddress(e.target.value)}\n          placeholder=\"Destination validator address\"\n          label=\"Validator address to redelegate\"\n        />\n      )}\n      <TextInput\n        type=\"number\"\n        value={amountToSend}\n        onChange={(e) => setAmountToSend(e.target.value)}\n        placeholder=\"Juno amount\"\n        label={`Amount to ${option}`}\n      />\n      <br />\n      <Button\n        className=\"btn-primary\"\n        onClick={query}\n        loading={loading}\n        text=\"Query\"\n      />\n      <br />\n      <PrettyPrint data={data} style={{ width: \"95%\" }} />\n    </div>\n  )\n}\n\nexport default AllAllowances\n","import { useState } from \"react\"\nimport SectionLayout from \"src/layout/Section\"\nimport AllAllowances from \"./AllAllowances\"\nimport Admins from \"./Admins\"\nimport Allowances from \"./Allowances\"\nimport AllPermissions from \"./AllPermissions\"\nimport Permissions from \"./Permissions\"\nimport CanExecute from \"./CanExecute\"\nimport ContractAddress from \"src/components/ContractAddress\"\nimport Dropdown from \"src/components/Dropdown\"\n\nconst DROPDOWN_OPTIONS = [\n  \"Admins\",\n  \"All allowances\",\n  \"Allowance\",\n  \"All permissions\",\n  \"Permission\",\n  \"Can execute\",\n]\n\nconst Query = (): JSX.Element => {\n  const [option, setOption] = useState<string>(\"admins\")\n\n  return (\n    <SectionLayout>\n      <ContractAddress />\n      <br />\n      <Dropdown\n        label=\"Select query\"\n        value={option}\n        options={DROPDOWN_OPTIONS}\n        onChange={(e) => setOption(e.target.value)}\n      />\n      <div className=\"pt-4\">\n        {option === \"admins\" && <Admins />}\n        {option === \"all-allowances\" && <AllAllowances />}\n        {option === \"allowance\" && <Allowances />}\n        {option === \"all-permissions\" && <AllPermissions />}\n        {option === \"permission\" && <Permissions />}\n        {option === \"can-execute\" && <CanExecute />}\n      </div>\n    </SectionLayout>\n  )\n}\n\nexport default Query\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport { ToastContainer } from \"react-toastify\"\nimport { WalletProvider } from \"./services/wallet\"\nimport { ContractsProvider } from \"./contracts\"\nimport PageLayout from \"./layout/Page\"\nimport {\n  executePath,\n  instantiatePath,\n  queryPath /* contractPath */,\n} from \"./routes\"\n// import { ProtectedSwitch } from \"./routes/ProtectedSwitch\"\nimport Welcome from \"./pages/Welcome\"\n// import Contract from \"./pages/Contract\"\nimport Instantiate from \"./pages/Instantiate\"\nimport Execute from \"./pages/Execute\"\nimport Query from \"./pages/Query\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { useState } from \"react\"\n\nconst App = (): JSX.Element => {\n  const [network, setNetwork] = useState<string>(\"juno\")\n\n  return (\n    <WalletProvider>\n      <ContractsProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <PageLayout network={network} setNetwork={setNetwork}>\n            <Switch>\n              <Route exact path=\"/\" component={Welcome} />\n              <Route\n                exact\n                path={`/${network}/${instantiatePath}`}\n                component={Instantiate}\n              />\n              <Route\n                exact\n                path={`/${network}/${executePath}`}\n                component={Execute}\n              />\n              <Route\n                exact\n                path={`/${network}/${queryPath}`}\n                component={Query}\n              />\n              {/* <ProtectedSwitch>\n                <Route exact path={`/${contractPath}`} component={Contract} />\n                <Route\n                  exact\n                  path={`/${instantiatePath}`}\n                  component={Instantiate}\n                />\n                <Route exact path={`/${executePath}`} component={Execute} />\n                <Route exact path={`/${queryPath}`} component={Query} />\n              </ProtectedSwitch> */}\n            </Switch>\n          </PageLayout>\n        </Router>\n        <ToastContainer theme=\"dark\" />\n      </ContractsProvider>\n    </WalletProvider>\n  )\n}\n\nexport default App\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}